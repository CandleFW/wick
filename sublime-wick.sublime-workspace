{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"CSS",
				"CSSParser"
			],
			[
				"css",
				"css_string"
			],
			[
				"Ac",
				"ACTIVE"
			],
			[
				"tra",
				"transitionIn"
			],
			[
				"el",
				"element"
			],
			[
				"o",
				"o_el"
			],
			[
				"e",
				"i_el"
			],
			[
				"view",
				"views"
			],
			[
				"set",
				"setTimeout"
			],
			[
				"my-",
				"my-other-input"
			],
			[
				"at",
				"attrib_name"
			],
			[
				"atr",
				"attribute"
			],
			[
				"prop",
				"prop_name"
			],
			[
				"tag",
				"tagname"
			],
			[
				"pre",
				"parent_element"
			],
			[
				"att",
				"attrib"
			],
			[
				"p",
				"prop"
			],
			[
				"ta",
				"tag_index"
			],
			[
				"in",
				"innerHTML"
			],
			[
				"ill",
				"ill_element"
			],
			[
				"Ca",
				"CaseConstructor"
			],
			[
				"ex",
				"expected_error_message"
			],
			[
				"HTML",
				"HTML_text"
			],
			[
				"Mod",
				"ModelContainerTests"
			],
			[
				"Prop",
				"PropName"
			],
			[
				"Sche",
				"Scheduler"
			],
			[
				"update",
				"updateScheduleUpdate"
			],
			[
				"Add",
				"AddProp"
			],
			[
				"__",
				"__export_contructor__"
			],
			[
				"__e",
				"__export_constructor__"
			],
			[
				"con",
				"constructor"
			],
			[
				"sch",
				"schema"
			],
			[
				"val",
				"value"
			],
			[
				"def",
				"defineProperty"
			],
			[
				"sc",
				"schema"
			],
			[
				"Mode",
				"ModelBase"
			],
			[
				"par",
				"parent_lvl"
			],
			[
				"get",
				"getElement"
			],
			[
				"ch",
				"children"
			],
			[
				"da",
				"dataset"
			],
			[
				"Impo",
				"ImportDataFromDataSet"
			],
			[
				"cont",
				"continue"
			],
			[
				"Bo",
				"BOOL"
			],
			[
				"va",
				"value"
			],
			[
				"case",
				"cassette"
			],
			[
				"pare",
				"parent_element"
			],
			[
				"parent",
				"parentElement"
			],
			[
				"re",
				"result"
			],
			[
				"new",
				"new_items"
			],
			[
				"ad",
				"add_list"
			],
			[
				"add",
				"addView"
			],
			[
				"_",
				"__insert__"
			],
			[
				"ins",
				"insert"
			],
			[
				"id",
				"identifier"
			],
			[
				"__get",
				"__getAll__"
			],
			[
				"retu",
				"return_data"
			],
			[
				"ret",
				"return_data"
			],
			[
				"Model",
				"ModelContainer"
			],
			[
				"fil",
				"filterUpdate"
			],
			[
				"it",
				"item"
			],
			[
				"upd",
				"updateViewsRemoved"
			],
			[
				"Sl",
				"SkeletonCase"
			],
			[
				"C",
				"Constructor"
			],
			[
				"c",
				"constructor"
			],
			[
				"Compon",
				"ComponentConstructor"
			],
			[
				"SK",
				"SkeletonCase"
			],
			[
				"s",
				"skeleton"
			],
			[
				"Cas",
				"CaseConstuctor"
			],
			[
				"W",
				"WORKING_DOM"
			],
			[
				"Skel",
				"SkeletonCase"
			],
			[
				"SL",
				"SkeletonCase"
			],
			[
				"Com",
				"ComponentConstructor"
			],
			[
				"Ske",
				"SkeletonCase"
			],
			[
				"child",
				"children"
			],
			[
				"expo",
				"__export_data__"
			],
			[
				"exp",
				"export_data"
			],
			[
				"Venue",
				"VenuesModel"
			],
			[
				"br",
				"brewery_name"
			],
			[
				"cale",
				"calendar_button"
			],
			[
				"parser",
				"parser_name"
			],
			[
				"pag",
				"page_parser"
			],
			[
				"anim",
				"anim_bloc"
			],
			[
				"de",
				"destructor"
			],
			[
				"step",
				"step_multiplier"
			],
			[
				"sTy",
				"StyleAnimBloc"
			],
			[
				"Sty",
				"StyleAnimBlocPercentage"
			],
			[
				"to",
				"to_val"
			],
			[
				"ste",
				"step_multiplier"
			],
			[
				"run",
				"running_animations"
			],
			[
				"Anim",
				"AnimBloc"
			],
			[
				"an",
				"anim_bloc"
			],
			[
				"remo",
				"removeDataFromContainer"
			],
			[
				"getData",
				"getDataFromContainer"
			],
			[
				"Event",
				"EventModel"
			],
			[
				"inser",
				"insertItem"
			],
			[
				"inse",
				"insertIntoArray"
			],
			[
				"pro",
				"prototype"
			],
			[
				"start",
				"start_time"
			],
			[
				"root",
				"root1"
			],
			[
				"d",
				"draw"
			],
			[
				"Rid",
				"RidPair"
			],
			[
				"len",
				"length"
			],
			[
				"leng",
				"length2"
			],
			[
				"out",
				"out_deltas"
			],
			[
				"ma",
				"machine_id"
			],
			[
				"sub",
				"submitted"
			],
			[
				"di",
				"di_a"
			],
			[
				"loc",
				"local_viewer"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "/*\n    Boring Source stuff\n*/\nimport { Source } from \"./source\"\n\nimport { Template } from \"./template\"\n\nimport { Skeleton } from \"./skeleton\"\n/* \n    Cassettes\n*/\nimport { FilterLimit } from \"./cassette/filter_limit\"\n\nimport { Cassette, CloseCassette } from \"./cassette/cassette\"\n\nimport { Form } from \"./cassette/form\"\n\nimport { Input } from \"./cassette/input\"\n\nimport { Filter } from \"./cassette/filter\"\n\nimport { Term } from \"./cassette/term\"\n\nimport { Exporter } from \"./cassette/exporter\"\n\nimport { ImportQuery } from \"./cassette/import_query\"\n\nimport { DataEdit } from \"./cassette/data_edit\"\n\nimport { Exists, NotExists } from \"./cassette/exists\"\n\nimport {\n    EpochDay,\n    EpochTime,\n    EpochDate,\n    EpochMonth,\n    EpochYear,\n    EpochToDateTime\n} from \"./cassette/epoch\"\n\nlet PresetCassettes = {\n    raw: Cassette,\n    cassette: Cassette,\n    form: Form,\n    input: Input,\n    export: Exporter,\n    iquery: ImportQuery,\n    edt: EpochToDateTime,\n    etime: EpochTime,\n    eday: EpochDay,\n    edate: EpochDate,\n    eyear: EpochYear,\n    emonth: EpochMonth,\n    exists: Exists,\n    not_exists: NotExists,\n    data_edit: DataEdit,\n    term: Term,\n    limit: FilterLimit\n}\n\nimport { Tap } from \"./tap/tap\"\nimport { Pipe } from \"./pipe/pipe\"\nimport { IO } from \"./io/io\"\n\n/**\n * @modele Wick HTML AST\n * \n * When the SourceConstructor parses a template tag, it builds an abstract syntex tree , creating node for every tag it incounters.\n * This tree is then used to construct a SourceSkeleton tree, using parsed tag names, \n */\n\n/**\n * Class for root.\n *\n * @class      Root (name)\n */\nexport class Root {\n    constructor() {\n        this.html = \"\";\n        this.children = [];\n        this.tag_index = 1;\n    };\n\n    addChild(child) {\n        child.parent = this;\n        this.children.push(child);\n    }\n\n    constructSkeleton(presets) {\n        let element = document.createElement(\"div\")\n        element.innerHTML = this.html;\n        let root_skeleton = new Skeleton(element);\n        for (let i = 0, l = this.children.length; i < l; i++)\n            this.children[i].constructSkeleton(root_skeleton.children, presets);\n        return root_skeleton;\n    }\n\n    getIndex() {\n        return this.tag_index++;\n    }\n\n    toJSON() {\n        return {\n            children: this.children,\n            html: this.html\n        }\n    }\n\n    offset(increase = 0) {\n        let out = this.tag_count;\n        this.tag_count += increase;\n        return out;\n    }\n}\n\nexport class GenericNode {\n\n    constructor(tagname, attributes, parent, MiniParse, presets) {\n\n        this.parent = null;\n        this.tagname = tagname;\n        this.attributes = attributes || {};\n        this.element = null;\n        this.IS_NULL = false;\n        this.CONSUMES_TAG = true;\n        this.CONSUMES_SAME = false;\n        this.children = [];\n        this.prop_name = null;\n        this.html = \"\";\n        this.index_tag = \"\"\n        this.open_tag = \"\";\n        this.close_tag = \"\";\n        this.tag_index = 0;\n        this.index = 0;\n\n        if (parent)\n            parent.addChild(this);\n\n        if (MiniParse)\n            this.treeParseAttributes(MiniParse, presets);\n    };\n\n    finalize(ctx) {\n\n        ctx.html += this.open_tag + this.index_tag + this.html + this.close_tag;\n    }\n\n    replaceChild(child, new_child) {\n        for (let i = 0; i < this.children.length; i++)\n\n            if (this.children[i] == child) {\n                this.children[i] = new_child;\n                new_child.parent = this;\n                child.parent = null;\n                return\n            }\n    }\n\n    removeChild(child) {\n\n        for (let i = 0; i < this.children.length; i++)\n            if (this.children[i] == child)\n                return this.children.splice(i, 1);\n    }\n\n    addChild(child) {\n\n        if (child instanceof TapNode && !(this instanceof SourceNode))\n            return this.parent.addChild(child);\n\n        child.parent = this;\n        this.children.push(child);\n    }\n\n    setAttribProp(name) {\n\n        if (!this.prop_name) this.prop_name = name;\n\n        for (let i = 0; i < this.children.length; i++)\n            this.children[i].setAttribProp(name);\n    }\n\n    /**\n     *  Builds ASTs off of attributes. \n     *  \n     *  TODO: Parse more generic attribute structures, such as style=\"border_color=[color]\"\n     *\n     * @param      {Function}  MiniParse  The mini parse function\n     * @param      {Object}    presets    The global presets object. \n     */\n    treeParseAttributes(MiniParse, presets) {\n\n        let i = -1;\n\n        for (let n in this.attributes) {\n            let attrib = this.attributes[n];\n            if (attrib[0] == \"<\") {\n                let root = new SourceNode(\"\", null, null);\n                root.tag_index = (i < 0) ? (i = this.getIndex(), this.index_tag = `##:${i} `, this.index = i) : i;\n                MiniParse(attrib, root, presets);\n                root.children[0].setAttribProp(n);\n                this.addChild(root.children[0]);\n            }\n        }\n    }\n\n    getMissingAttribute(name){\n        \n        if(this.attributes[name])\n            return this.attributes[name];\n        if(this.parent && this.parent.getMissingAttribute)\n            return this.parent.getMissingAttribute(name);\n        return null;\n    }\n\n    parseAttributes() {\n\n        let out = {};\n\n        for (let name in this.attributes) {\n            if(!this.attributes[name] && this.parent && this.parent.getMissingAttribute)\n                out[name] = this.parent.getMissingAttribute(name);\n            else\n                out[name] = this.attributes[name];\n        }\n\n        out.prop = this.prop_name;\n\n        return out;\n    }\n\n    addProp(lexer, prop_name, parseFunction, presets) {\n\n        if (this.prop_name !== prop_name)\n            this.split(new IONode(prop_name, this.attributes, null, this, this.getIndex()), prop_name);\n        else\n            new IONode(prop_name, this.attributes, this, this, this.getIndex());\n    }\n\n    toJSON() {\n\n        return {\n            children: this.children,\n            tagname: this.tagname,\n            tag_count: this.tag_count,\n            tag: { open_tag: this.open_tag, close_tag: this.close_tag },\n            html: this.html,\n        }\n    }\n\n    split(node, prop_name) {\n\n        if (node) {\n\n            if (this.prop_name) {\n\n                if (prop_name == this.prop_name)\n                    this.addChild(node);\n                else {\n                    let r = new this.constructor(this.tagname, this.attributes, null);\n                    r.CONSUMES_SAME = (r.CONSUMES_TAG) ? (!(r.CONSUMES_TAG = !1)) : !1;\n                    r.prop_name = prop_name;\n                    r.addChild(node);\n                    return this.parent.split(r, prop_name);\n                }\n            } else {\n                this.addChild(node);\n                this.prop_name = prop_name;\n                this.parent.removeChild(this);\n                return this.parent.split(this, prop_name);\n            }\n        } else {\n\n            if (this.prop_name) {\n\n                if (prop_name == this.prop_name) { /* NO OP */ } else {\n\n                    let r = new this.constructor(this.tagname, this.attributes, null);\n                    r.prop_name = prop_name;\n                    return this.parent.split(r, prop_name);\n                }\n            } else {\n\n                this.parent.removeChild(this);\n                return this.parent.split(this, prop_name);\n            }\n        }\n\n        return -1;\n    }\n\n\n\n    getIndex() {\n\n        if (this.tag_index > 0) return this.tag_index++;\n\n        if (this.parent) this.index = this.parent.getIndex();\n\n        return this.index;\n    }\n\n    constructSkeleton(receiving_array, presets) {\n\n        let skeleton = this.createSkeletonConstructor(presets);\n\n        receiving_array.push(skeleton)\n\n        for (let i = 0; i < this.children.length; i++)\n            this.children[i].constructSkeleton(skeleton.children, presets);\n\n        return skeleton\n    }\n\n    createSkeletonConstructor(presets) {\n\n        let skeleton = new Skeleton(this.getElement(), this.getConstructor(presets), this.parseAttributes(), presets, this.index);\n\n        return skeleton;\n    }\n\n    getConstructor() {\n\n        return null;\n    }\n\n    getElement() {\n\n        return this.element;\n    }\n}\n\nexport class SourceNode extends GenericNode {\n\n    constructor(tagname, attributes, parent) {\n\n        super(tagname, attributes, parent);\n    };\n\n    finalize(ctx) {\n\n        ctx.html += this.html;\n    }\n\n    addProp(lexer, prop_name, parseFunction, presets) {\n\n        if (lexer.text == \"(\" && lexer.peek().text == \"(\") {\n\n            lexer.assert(\"(\");\n\n            lexer.assert(\"(\");\n\n            let template = new TemplateNode(\"list\", { prop: prop_name }, this, this);\n\n            template.parse(lexer, parseFunction, presets);\n\n            lexer.assert(\")\");\n\n            let out = lexer.pos + 1;\n\n            lexer.assert(\")\");\n\n            return out;\n        }\n    }\n\n    getConstructor() {\n\n        return Source;\n    }\n\n    split(node, prop_name) {\n\n        if (node) this.addChild(node);\n    }\n}\n\nexport class TemplateNode extends GenericNode {\n\n    constructor(tagname, attributes, parent, ctx) {\n        console.log(attributes)\n        super(tagname, attributes, parent);\n\n        this.prop_name = attributes.prop;\n\n        this.index = this.getIndex();\n        ctx.html += `<tmpl>##:${this.index} </tmpl>`\n        this.filters = [];\n        this.terms = [];\n        this.templates = [];\n    };\n\n    addChild(child) {\n\n        if (child instanceof FilterNode)\n            this.filters.push(child);\n        else if (child instanceof TermNode)\n            this.terms.push(child);\n        else if (child instanceof SourceNode) {\n\n            if (this.templates.length > 0) throw new Error(\"Only one Source allowed in a Template.\");\n\n            this.templates.push(child);\n\n            child.tag_index = 1;\n\n            this.html = child.html;\n\n        } else throw new Error(\"Templates only support Filter, Term or Source elements.\")\n    }\n\n    constructSkeleton(receiving_array, presets) {\n\n        let element = document.createElement(\"div\");\n\n        element.innerHTML = this.html;\n\n        let skeleton = new Skeleton(this.getElement(), Template, this.parseAttributes(), presets, this.index);\n\n        skeleton.filters = this.filters.map((filter) => filter.createSkeletonConstructor(presets))\n\n        skeleton.terms = this.terms.map((term) => term.createSkeletonConstructor(presets))\n\n\n        for (let i = 0, l = this.templates.length; i < l; i++) {\n\n            let template = this.templates[i];\n\n            template.element = document.createElement(\"div\");\n\n            template.element.innerHTML = template.html;\n\n            template.constructSkeleton(skeleton.templates, presets);\n        }\n\n        receiving_array.push(skeleton)\n    }\n\n    getElement() {\n\n        let div = document.createElement(\"list\");\n\n        return div;\n    }\n\n    addProp(lexer, prop_name, parseFunction, presets) {\n        //ctx.html += prop_name;\n    }\n\n    parse(lexer, parseFunction, presets) {\n\n        let ctx = { html: \"\" };\n\n        let root = new Root();\n\n        while (lexer.text !== \")\" && lexer.peek().text !== \")\") {\n\n            if (!lexer.text) throw new Error(\"Unexpected end of Output. Missing '))' \");\n\n            let out = parseFunction(lexer, this, presets);\n\n            if (out instanceof SourceNode)\n                this.html = out.html;\n        }\n    }\n\n    split(node, prop_name) {\n\n        if (node)\n            this.addChild(node);\n\n        return this.tag_count;\n    }\n}\n\nexport class TapNode extends GenericNode {\n    constructor(tagname, attributes, parent) {\n        super(tagname, attributes, parent);\n    };\n\n    finalize(ctx) {\n        ctx.html += this.html;\n    }\n\n    getConstructor(presets) {\n        let $class = this.attributes.w_class;\n\n        if ($class) {\n            let t = (presets.imported.tap[$class]);\n            if (Tap.isPrototypeOf(t))\n                return t;\n        }\n\n        return Tap;\n    }\n\n    split(node, prop_name) {\n\n        if (this.attributes.w_class) {\n            if (node) this.addChild(node);\n        } else\n            super.split(node,prop_name);\n\n    }\n}\n\n\nexport class FilterNode extends GenericNode {\n    constructor(tagname, attributes, parent) {\n        super(tagname, attributes, parent);\n        this.CONSUMES_TAG = false;\n    };\n\n    finalize(ctx) {}\n\n    getConstructor(presets) {\n        return Tap;\n    }\n\n    addProp(lexer, prop_name, parseFunction, presets) {\n        this.attributes.prop = prop_name;\n    }\n}\n\n\nexport class TermNode extends GenericNode {\n    constructor(tagname, attributes, parent) {\n        super(tagname, attributes, parent);\n    };\n\n    finalize(ctx) {}\n\n    getConstructor(presets) {\n        return Tap;\n    }\n\n    addProp(lexer, prop_name, parseFunction, presets) {\n        this.attributes.prop = prop_name;\n    }\n}\n\n\n\nexport class PipeNode extends GenericNode {\n\n    constructor(tagname, attributes, parent) {\n        super(tagname, attributes, parent);\n    };\n\n    finalize(ctx, presets) {\n        ctx.html += this.html;\n    }\n\n    getConstructor(presets, finalizing = false) {\n        let constructor = Pipe;\n        return constructor;\n    }\n\n    split(node, prop_name) {\n        if (!(this.parent instanceof PipeNode) &&\n            !(this.parent instanceof TapNode)\n        ) {\n            //Need a TapNode to complete the pipeline\n            let tap = new TapNode(\"\", {}, null)\n            this.prop_name = this.prop_name;\n            this.parent.replaceChild(this, tap);\n            tap.addChild(this);\n        }\n\n        super.split(node, prop_name);\n    }\n}\n\nexport class IONode extends GenericNode {\n    constructor(prop_name, attributes, parent, ctx, index) {\n        super(\"\", null, parent);\n        this.index = index;\n        ctx.html += `<io prop=\"${prop_name}\">##:${index} </io>`\n        this.prop_name = prop_name;\n        this.CONSUMES_TAG = true;\n    };\n\n    getConstructor(presets) {\n        return IO;\n    }\n}",
			"file": "source/source/ast.js",
			"file_size": 14316,
			"file_write_time": 131763182562598152,
			"settings":
			{
				"buffer_size": 14057,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Package Control Messages\n========================\n\nDocBlockr with comments update\n------------------------------\n\n  DoxyDoxygen install\n  -------------------\n  \n  Thanks for installing this package\n  \n  It is highly recommended to restart Sublime Text before first use.\n  ------------------------------------------------------------------\n  \n  Simplified usage instructions\n  =============================\n  \n      - '/**' + 'Enter' to generate documentation of the following definition\n      - 'Alt' + 'Q' to generate documentation of the nearest definition\n      - 'Alt' + 'Q' to wrap and/or update existing documentation\n      - 'Eol' to goto next column\n      - 'Ctrl' + 'Space' to insert snippets\n      - 'Ctrl' + 'Shift' + '[' to fold comments\n      - 'Ctrl' + 'Shift' + ']' to unfold comments\n  \n  More commands and a short tutorial may be found from the palette.\n  \n  \n  Licensing\n  =========\n  \n  If you like DoxyDoxygen, please support development by buying a license. It doesn't cost much! :)\n  \n  \n  More information\n  ================\n  \n  For more information, troubleshooting, customizing settings and more, please visit https://github.com/20Tauri/DoxyDoxygen\n",
			"settings":
			{
				"buffer_size": 1175,
				"line_ending": "Windows",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"live",
				"MarkdownLivePreview: Edit Current File"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			]
		],
		"width": 428.0
	},
	"console":
	{
		"height": 217.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/_$_$_$_/wick"
	],
	"file_history":
	[
		"/D/_$_$_$_/wick/roadmap.md",
		"/D/_$_$_$_/wick/source/common/css/parser/tree/root.js",
		"/D/_$_$_$_/wick_temp/wick/source/linker/wurl.js",
		"/D/_$_$_$_/wick_temp/wick/source/linker/linker.js",
		"/D/_$_$_$_/wick_temp/wick/source/case.js",
		"/D/_$_$_$_/wick/package.json",
		"/D/_$_$_$_/wick_temp/wick/source/cassette/filter.js",
		"/D/_$_$_$_/wick_temp/wick/source/wick.js",
		"/D/_$_$_$_/wick/source/common/css/parser/tree/base.js",
		"/D/_$_$_$_/wick/source/source/source.js",
		"/D/_$_$_$_/wick/source/source/base.js",
		"/D/_$_$_$_/wick/source/common/scheduler.js",
		"/D/_$_$_$_/wick/source/source/pipe/base.js",
		"/D/_$_$_$_/wick/source/network/router/component.js",
		"/D/_$_$_$_/wick/source/source/skeleton.js",
		"/D/_$_$_$_/wick_temp/dif.txt",
		"/D/_$_$_$_/wick_temp/wick/source/model/date_model_container.js",
		"/D/_$_$_$_/wick_temp/wick/source/model/binary_container.js",
		"/D/_$_$_$_/wick_temp/wick/source/model/schema_types.js",
		"/D/_$_$_$_/wick_temp/wick/source/cassette/exists.js",
		"/D/_$_$_$_/wick_temp/wick/source/cassette/epoch_to_dt.js",
		"/D/_$_$_$_/wick_temp/wick/source/common/url/url.js",
		"/D/_$_$_$_/wick_temp/wick/source/model/model.js",
		"/D/_$_$_$_/wick/source/animation/transformto.js",
		"/D/_$_$_$_/wick/source/animation/style_mappings.js",
		"/D/_$_$_$_/wick/source/animation/style.js",
		"/D/_$_$_$_/wick/source/animation/plue.js",
		"/D/_$_$_$_/wick/source/animation/color.js",
		"/D/_$_$_$_/wick/build/wick-dev.js",
		"/D/_$_$_$_/wick/source/animation/animation.js",
		"/D/_$_$_$_/wick/source/model/base.js",
		"/D/_$_$_$_/wick/source/model/model.js",
		"/D/_$_$_$_/wick/source/animation/transition/transitioner.js",
		"/D/_$_$_$_/wick/build/wick-min.js",
		"/D/_$_$_$_/wick/source/common/common.js",
		"/D/_$_$_$_/wick/source/common/string_parsing/lexer.js",
		"/D/_$_$_$_/wick/source/common/css/parser/parser.js",
		"/D/_$_$_$_/wick/source/source/template.js",
		"/D/_$_$_$_/wick/source/common/url/url.js",
		"/D/_$_$_$_/wick/source/common/string_parsing/tokenizer.js",
		"/D/_$_$_$_/wick/source/common/css/parser/ast/base.js",
		"/D/_$_$_$_/wick/source/common/event/touch_scroller.js",
		"/D/_$_$_$_/wick/documents/manual/source.md",
		"/D/_$_$_$_/wick/build/build_config/node.config.js",
		"/D/_$_$_$_/wick/source/model/container/btree.js",
		"/D/_$_$_$_/wick/source/network/router/page.js",
		"/D/_$_$_$_/wick/build/build_config/minibuild_es.config.js",
		"/D/_$_$_$_/wick/build/build_config/minibuild.config.js",
		"/D/_$_$_$_/wick/build/build_config/browserdev.config.js",
		"/D/_$_$_$_/wick/source/source/constructor.js",
		"/D/_$_$_$_/wick/source/source/ast.js",
		"/D/_$_$_$_/wick/source/view/view.js",
		"/D/_$_$_$_/wick/source/network/setter.js",
		"/D/_$_$_$_/wick/source/network/router/data_template.js",
		"/D/_$_$_$_/wick/source/network/getter.js",
		"/D/_$_$_$_/wick/source/model/container/base.js",
		"/D/_$_$_$_/wick/source/model/container/array.js",
		"/D/_$_$_$_/wick/test/suite/source_constructor_tests.js",
		"/D/_$_$_$_/wick/source/root/wick.js",
		"/D/_$_$_$_/wick/source/source/cassette/form.js",
		"/D/_$_$_$_/wick/source/source/tap/tap.js",
		"/D/_$_$_$_/wick/source/source/io/io.js",
		"/D/_$_$_$_/wick/source/source/cassette/exporter.js",
		"/D/_$_$_$_/wick/source/source/cassette/data_edit.js",
		"/D/_$_$_$_/wick/source/source/cassette/cassette.js",
		"/D/_$_$_$_/wick/source/source/taps/tap.js",
		"/D/_$_$_$_/wick/source/wick.js",
		"/D/_$_$_$_/wick/README.md",
		"/D/_$_$_$_/wick/source/source/source_constructor.js",
		"/D/_$_$_$_/wick/source/source/pipes/pipe.js",
		"/D/_$_$_$_/wick/source/source/pipe_base.js",
		"/D/_$_$_$_/wick/source/source/source_constructor_parser.js",
		"/D/_$_$_$_/wick/source/source/source_constructor_ast.js",
		"/D/_$_$_$_/wick/documents/getting_started_with_wick.html",
		"/D/_$_$_$_/wick/test/suite/mc_tests.js",
		"/D/_$_$_$_/wick/build/build_config/jsdoc.json",
		"/D/_$_$_$_/wick/source/schema/types/string.js",
		"/D/_$_$_$_/wick/source/schema/types/bool.js",
		"/C/Users/aweathersby/Documents/general notes/fpe_meeting_notes.md",
		"/D/_$_$_$_/wick/documents/markdown/pipes_and_io.md",
		"/D/_$_$_$_/wick/test/index.html",
		"/D/_$_$_$_/wick/index.html",
		"/C/Users/aweathersby/Documents/temp.txt",
		"/D/_$_$_$_/wick/.gitignore",
		"/D/_$_$_$_/wick/test/test.js",
		"/D/_$_$_$_/wick/test/suite/schema_tests.js",
		"/C/Users/aweathersby/AppData/Roaming/Sublime Text 3/Packages/Advanced CSV/AdvancedCSV.sublime-settings",
		"/D/_$_$_$_/wick/source/source/source_skeleton.js",
		"/C/Users/aweathersby/Downloads/users_7_10_2018 3_28_48 PM.csv",
		"/D/_$_$_$_/wick/source/case/case_skeleton.js",
		"/D/_$_$_$_/wick/source/case/case_constructor_ast.js",
		"/D/_$_$_$_/wick/source/case/case.js",
		"/D/_$_$_$_/wick/source/case/case_constructor.js",
		"/D/_$_$_$_/wick/test/suite/caseconstructor_tests.js",
		"/C/Users/aweathersby/Documents/general notes/Network Maintenance/2018/Jan/molecular_network_maintenance",
		"/C/Users/aweathersby/Documents/general notes/Network Maintenance/2018/Jan/metro",
		"/D/_$_$_$_/pytrucks/static/package.json",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/test/suite/btmc_tests.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/node_modules/buffer/index.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/test/scope_inject.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/documents/manual/containers.md",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/source/model/model_container.js",
		"/D/_$_$_$_/pytrucks/static/js/mvc/api/schemas.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/source/schema/schema_type.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/source/model/model.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/source/scheduler.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/source/model/model_base.js",
		"/D/_$_$_$_/pytrucks/pytruck_functions.py",
		"/C/Users/aweathersby/Desktop/desktop.ini",
		"/C/Users/aweathersby/Documents/general notes/Network Maintenance/2018/Jan/DH Glabe",
		"/C/Users/aweathersby/Documents/general notes/Network Maintenance/template",
		"/C/Users/aweathersby/Documents/general notes/Network Maintenance/2018/Jan/remax_network_maintenence",
		"/C/Users/aweathersby/Documents/general notes/Network Maintenance/This is a test",
		"/C/Users/aweathersby/Documents/general notes/blah",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/source/schema/time_type.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/source/schema/number_type.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/source/schema/schemas.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/source/schema/date_type.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/source/wick.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/documents/api/ModelContainer.html",
		"/D/_$_$_$_/pytrucks/templates/app/calendar/full.html",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/documents/getting_started_with_wick.html",
		"/D/_$_$_$_/pytrucks/static/js/mvc/cassettes/calendar/calendar_date.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/source/case/case_skeleton.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/source/case/case_constructor.js",
		"/D/_$_$_$_/pytrucks/templates/app/dashboard.html",
		"/D/_$_$_$_/pytrucks/static/js/mvc/api/formating_functions.js",
		"/D/_$_$_$_/pytrucks/static/js/libraries/wick/source/schema/bool_type.js"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 430.0,
		"where_history":
		[
			"D:\\_$_$_$_\\wick\\source"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"skeletons",
			"Element",
			"consumers",
			"wick",
			"Controller",
			"Model",
			"build",
			"views",
			"structure",
			"content",
			"window",
			"commit",
			"blockqoute",
			"### ",
			"Previous",
			"9d9eb39",
			"5c1730",
			"9271ff",
			"6becc8",
			"Initial commit on branch\n    \n    - [x] Changing case structure so that reusable Case components are created when a template is parsed: WIP\n    \n    - [x] Moved structure of linker to use new Case components, elements build\n    them now: WIP\n    \n    - [ ] Need to complete the filter system so that itmes can be sorted and\n    presented on screen\n    \n    - [x] Need to allow Elements to include transition features for advanced\n    page transitions. Allow common components to be excluded from\n    transitioning.\n    \n    Broke Model/View code up into a seperate class named ModelBase.\n    Both Model and ModelContainer inherit from this. This allows Views to\n    attach to ModelContainers and receive updates on items added and removed\n    from containers. CaseTemplates use this to update their scope with new\n    Cases or remove Cases whenever a Model is added to the CaseTemplate's\n    ModelContainer.",
			"myfootnote1",
			"version",
			"Lexer",
			"element",
			"load",
			"Scheduler",
			"SchemaConstructor",
			"Scheduler",
			"Transitioneer",
			"PresetTransitioners",
			"Transitioneer",
			"destructor",
			"dstr",
			"./",
			"Case",
			"and",
			"Cases",
			"./",
			"pipe",
			"}\n",
			"WORKING_DOM",
			"ParseTag",
			"HandleTemplateImport",
			"ParseTag",
			"HandleTemplateImport",
			"next",
			"debugger",
			"case",
			"Value",
			"style",
			"border",
			"next",
			"throw (",
			".text",
			"##:",
			"chldr",
			"a",
			"index_tag",
			"index",
			"this.index",
			"next",
			"text",
			"assert",
			"children",
			",",
			"StrongPasswordRequired",
			"State",
			"PreferredLanguage",
			"PasswordNeverExpires",
			"MobilePhone",
			"BlockCredential",
			"constructing_template",
			"constructing_tempalte",
			"conso",
			"cons",
			"console",
			"console.log"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"destroy"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "source/source/ast.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14057,
						"regions":
						{
						},
						"selection":
						[
							[
								932,
								932
							]
						],
						"settings":
						{
							"markdonw_live_preview_last_run": 1531844505.16,
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 648.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1175,
						"regions":
						{
						},
						"selection":
						[
							[
								657,
								657
							]
						],
						"settings":
						{
							"auto_indent": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_width": 2,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 39.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.958706991215,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 150.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "mocha tests watch",
	"project": "sublime-wick.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"roa",
				"roadmap.md"
			],
			[
				"pack",
				"package.json"
			],
			[
				"wi",
				"wishlist.md"
			],
			[
				"cssbas",
				"source\\common\\css\\parser\\tree\\base.js"
			],
			[
				"lex",
				"source\\common\\string_parsing\\lexer.js"
			],
			[
				"url",
				"source\\common\\url\\url.js"
			],
			[
				"comm",
				"source\\common\\common.js"
			],
			[
				"sch",
				"source\\common\\scheduler.js"
			],
			[
				"modba",
				"source\\model\\base.js"
			],
			[
				"MOdel",
				"source\\model\\model.js"
			],
			[
				"pipeb",
				"source\\source\\pipe\\base.js"
			],
			[
				"comp",
				"source\\network\\router\\component.js"
			],
			[
				"ske",
				"source\\source\\skeleton.js"
			],
			[
				"sourcebase",
				"source\\source\\base.js"
			],
			[
				"sourceb",
				"source\\model\\base.js"
			],
			[
				"tran",
				"source\\animation\\transition\\transitioneer.js"
			],
			[
				"model",
				"source\\model\\base.js"
			],
			[
				"source",
				"source\\source\\source.js"
			],
			[
				"piba",
				"source\\source\\pipe\\base.js"
			],
			[
				"ast",
				"source\\source\\ast.js"
			],
			[
				"io",
				"source\\source\\io\\io.js"
			],
			[
				"pipeba",
				"source\\source\\pipes\\base.js"
			],
			[
				"tap",
				"source\\source\\taps\\tap.js"
			],
			[
				"compon",
				"source\\network\\router\\component.js"
			],
			[
				"wick",
				"D:\\_$_$_$_\\wick\\source\\wick.js"
			],
			[
				"templat",
				"source\\source\\template.js"
			],
			[
				"cas",
				"documents\\manual\\case.md"
			],
			[
				"sour",
				"test\\suite\\source_constructor_tests.js"
			],
			[
				"j",
				"build\\build_config\\jsdoc.json"
			],
			[
				"pac",
				"package.json"
			],
			[
				"pa",
				"package.json"
			],
			[
				"modelbas",
				"source\\model\\base.js"
			],
			[
				"sourcetest",
				"test\\suite\\source_constructor_tests.js"
			],
			[
				"inde",
				"test\\index.html"
			],
			[
				"getting",
				"documents\\getting_started_with_wick.html"
			],
			[
				"mc_",
				"test\\suite\\mc_tests.js"
			],
			[
				"string",
				"source\\schema\\types\\string.js"
			],
			[
				"bool",
				"source\\schema\\types\\bool.js"
			],
			[
				"schema",
				"test\\suite\\schema_tests.js"
			],
			[
				"testind",
				"test\\index.html"
			],
			[
				"tokeniz",
				"source\\common\\string_parsing\\tokenizer.js"
			],
			[
				"lexer",
				"source\\common\\string_parsing\\lexer.js"
			],
			[
				"skelet",
				"source\\source\\source_skeleton.js"
			],
			[
				"sourceast",
				"source\\source\\source_constructor_ast.js"
			],
			[
				"source_con",
				"test\\suite\\source_constructor_tests.js"
			],
			[
				"test",
				"test\\test.js"
			],
			[
				"case",
				"source\\case\\case.js"
			],
			[
				"cases",
				"source\\case\\case_skeleton.js"
			],
			[
				"casecont",
				"source\\case\\case_constructor.js"
			],
			[
				"casecon",
				"source\\case\\case_constructor.js"
			],
			[
				"casetest",
				"test\\suite\\caseconstructor_tests.js"
			],
			[
				"packa",
				"static\\package.json"
			],
			[
				"quadr",
				"static\\js\\libraries\\wick\\source\\common\\math\\quadratic_bezier.js"
			],
			[
				"date_type",
				"static\\js\\libraries\\wick\\source\\schema\\date_type.js"
			],
			[
				"",
				"static\\js\\libraries\\wick\\test\\suite\\btmc_tests.js"
			],
			[
				"wick.",
				"static\\js\\libraries\\wick\\source\\wick.js"
			],
			[
				"modelb",
				"static\\js\\libraries\\wick\\source\\model\\model_base.js"
			],
			[
				"pyrucks",
				"pytruck_functions.py"
			],
			[
				"wickschema",
				"static\\js\\libraries\\wick\\source\\schema\\schemas.js"
			],
			[
				"containm",
				"static\\js\\libraries\\wick\\documents\\manual\\containers.md"
			],
			[
				"model_c",
				"static\\js\\libraries\\wick\\source\\model\\model_container.js"
			],
			[
				"modelcon",
				"static\\js\\libraries\\wick\\source\\model\\model_container.js"
			],
			[
				"calendad",
				"static\\js\\mvc\\cassettes\\calendar\\calendar_date.js"
			],
			[
				"casesk",
				"static\\js\\libraries\\wick\\source\\case\\case_skeleton.js"
			],
			[
				"calendar date",
				"static\\js\\mvc\\cassettes\\calendar\\calendar_date.js"
			],
			[
				"case_con",
				"static\\js\\libraries\\wick\\source\\case\\case_constructor.js"
			],
			[
				"appclhtm",
				"templates\\app\\calendar\\full.html"
			],
			[
				"pyt",
				"pytruck_functions.py"
			],
			[
				"schemas",
				"static\\js\\mvc\\api\\schemas.js"
			],
			[
				"linker",
				"static\\js\\libraries\\wick\\source\\linker\\linker.js"
			],
			[
				"wickcompon.js",
				"static\\js\\libraries\\wick\\source\\linker\\component.js"
			],
			[
				"wick.js",
				"static\\js\\libraries\\wick\\source\\wick.js"
			],
			[
				"calendar",
				"static\\js\\mvc\\cases\\calendar\\calendar.js"
			],
			[
				"nearby",
				"static\\js\\mvc\\cases\\nearby_trucks.js"
			],
			[
				"case.md",
				"static\\js\\libraries\\wick\\documents\\manual\\case.md"
			],
			[
				"input",
				"source\\cassette\\input.js"
			],
			[
				"transfro",
				"source\\animation\\transformto.js"
			],
			[
				"mode",
				"source\\model\\model.js"
			],
			[
				"wurl",
				"source\\linker\\wurl.js"
			],
			[
				"view",
				"source\\view.js"
			],
			[
				"casete",
				"source\\case\\case_template.js"
			],
			[
				"array_",
				"source\\model\\array_container.js"
			],
			[
				"array",
				"source\\model\\array_container.js"
			],
			[
				"transform",
				"source\\animation\\transformto.js"
			],
			[
				"arra",
				"source\\model\\array_container.js"
			],
			[
				"case_te",
				"source\\case\\case_template.js"
			],
			[
				"linker.",
				"pytrucks\\static\\js\\libraries\\wick\\source\\linker\\linker.js"
			],
			[
				"component",
				"pytrucks\\static\\js\\libraries\\wick\\source\\linker\\component.js"
			],
			[
				"element",
				"pytrucks\\static\\js\\libraries\\wick\\source\\linker\\element.js"
			],
			[
				"elemen",
				"pytrucks\\static\\css\\app\\element.css"
			],
			[
				"cassette",
				"pytrucks\\static\\js\\libraries\\wick\\source\\cassette\\cassette.js"
			],
			[
				"rivet",
				"pytrucks\\static\\js\\libraries\\wick\\source\\rivet.js"
			],
			[
				"month",
				"pytrucks\\static\\js\\mvc\\cases\\calendar\\month.js"
			],
			[
				"calnedjs",
				"pytrucks\\static\\js\\mvc\\cases\\calendar\\calendar.js"
			],
			[
				"linker.js",
				"pytrucks\\static\\js\\libraries\\wick\\source\\linker\\linker.js"
			],
			[
				"riv",
				"pytrucks\\static\\js\\libraries\\wick\\source\\rivet.js"
			],
			[
				"com",
				"pytrucks\\common.py"
			],
			[
				"callba",
				"pytrucks\\routes\\callback_handling.py"
			],
			[
				"calendar.js",
				"static\\js\\mvc\\cases\\calendar\\calendar.js"
			],
			[
				"r",
				"README.md"
			],
			[
				"app",
				"app.py"
			],
			[
				"week",
				"static\\js\\mvc\\cassettes\\week_info.js"
			],
			[
				"head",
				"templates\\common\\head.html"
			],
			[
				"apischem",
				"static\\js\\mvc\\api\\schemas.js"
			],
			[
				"exp",
				"static\\wick\\source\\cassette\\exporter.js"
			],
			[
				"vendors",
				"static\\js\\mvc\\models\\vendor.js"
			],
			[
				"venue",
				"static\\js\\mvc\\models\\venue.js"
			],
			[
				"export",
				"static\\wick\\source\\cassette\\exporter.js"
			],
			[
				"paranoms",
				"static\\js\\paranoms-main.js"
			],
			[
				"booking",
				"static\\js\\mvc\\cases\\calendar\\booking.js"
			],
			[
				"day",
				"static\\js\\mvc\\cassettes\\day.js"
			],
			[
				"preset",
				"static\\js\\mvc\\presets.js"
			],
			[
				"appc",
				"templates\\venue\\calendar\\app_calendar.html"
			],
			[
				"appca",
				"templates\\vendor\\calendar\\app_calendar.html"
			],
			[
				"calender pre",
				"static\\js\\mvc\\cassettes\\calendar\\calendar_prev_month.js"
			],
			[
				"full",
				"templates\\vendor\\calendar\\full_calendar.html"
			],
			[
				"cass",
				"static\\wick\\source\\cassette\\cassette.js"
			],
			[
				"callendar_",
				"static\\js\\mvc\\cassettes\\calendar\\calendar_next_month.js"
			],
			[
				"wick element",
				"static\\wick\\source\\linker\\element.js"
			],
			[
				"calendarda",
				"static\\js\\mvc\\cassettes\\calendar\\calendar_date.js"
			],
			[
				"paranom",
				"static\\js\\paranoms-main.js"
			],
			[
				"vendorcalend",
				"templates\\vendor\\calendar\\full_calendar.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 160.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
