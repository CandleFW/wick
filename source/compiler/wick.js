let fn = {}; const 
/************** Maps **************/

    /* Symbols To Inject into the Lexer */
    symbols = ["</","||","^=","$=","*=","<=",">=","```","``","===","...","<",">","==","!=","!==","**","++","--","<<",">>",">>>","&&","+=","-=","%=","/=","**=","<<=",">>=",">>>=","&=","|=","=>","//","/*"],

    /* Goto lookup maps */
    gt0 = [0,-1,1,6,4,-1,7,-320,2,3,5,9],
gt1 = [0,-2,11,-2,7,-322,10,9],
gt2 = [0,-330,14,-7,13,16,-2,15],
gt3 = [0,-334,36,37,38,-2,16,-2,41],
gt4 = [0,-334,42,37,38,-2,16,-2,41],
gt5 = [0,-334,45,37,38,-2,16,-2,41],
gt6 = [0,-340,49,48],
gt7 = [0,-335,56,38,-2,16,-2,41],
gt8 = [0,-339,16,-2,58],
gt9 = [0,-339,16,-2,60],
gt10 = [0,-116,68,71,-211,70,-1,66,64,67,-9,73,69,74],
gt11 = [0,-340,88],
gt12 = [0,-4,90],
gt13 = [0,-337,92,-1,16,-2,94,-5,93],
gt14 = [0,-116,68,71,-211,70,-1,66,99,67,-9,73,69,74],
gt15 = [0,-338,103,16,-2,15],
gt16 = [0,-116,68,71,-211,70,-3,104,-9,73,69,74],
gt17 = [0,-118,105,-6,109,-1,108,-201,107,-13,73,106,74],
gt18 = [0,-346,112,111],
gt19 = [0,-345,114],
gt20 = [0,-330,117],
gt21 = [0,-4,118],
gt22 = [0,-349,122,121,120,123],
gt23 = [0,-349,122,121,131,123],
gt24 = [0,-338,133,16,-2,15],
gt25 = [0,-338,134,16,-2,15],
gt26 = [0,-119,138,-6,136,-202,140,-13,73,139,74],
gt27 = [0,-330,142],
gt28 = [0,-349,146,-2,123],
gt29 = [0,-338,148,16,-2,15],
gt30 = [0,-119,151,-209,140,-13,73,139,74],

    // State action lookup maps
    sm0=[0,-4,0,-4,0,-8,1],
sm1=[0,2,-3,0,-4,0],
sm2=[0,3,-3,0,-4,0],
sm3=[0,4,-3,0,-4,0,-4,-1],
sm4=[0,5,-3,0,-4,0,-4,-1],
sm5=[0,-4,0,-4,0,-8,6],
sm6=[0,-4,0,-4,0,-8,7],
sm7=[0,-2,8,-1,0,-4,0,-6,9,-144,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],
sm8=[0,28,-3,0,-4,0,-4,-1],
sm9=[0,29,-3,0,-4,0],
sm10=[0,-4,0,-4,0,-8,30],
sm11=[0,-2,8,-1,0,-4,0,-144,31,32],
sm12=[0,-2,8,-1,0,-4,0,-4,-1,-4,33,-56,34,-77,31,32],
sm13=[0,-2,8,-1,0,-4,0,-4,-1,-4,35,-56,36,-77,31,32],
sm14=[0,-2,37,-1,0,-4,0,-4,-1,-4,37,-56,37,-77,37,37],
sm15=[0,-2,38,-1,0,-4,0,-4,-1,-4,39,-23,39,-27,40,-2,41,-1,39,-69,42,-7,39,39],
sm16=[0,-2,43,-1,0,-4,0,-4,-1,-4,43,-23,43,-27,43,-2,43,-1,43,-69,43,-7,43,43],
sm17=[0,-2,44,-1,0,-4,0,-9,44,-56,44,-77,44,44],
sm18=[0,-2,44,-1,0,-4,0,-4,-1,-4,44,-56,44,-77,44,44],
sm19=[0,-2,8,-1,0,-4,0,-9,45,-56,46,-77,31,32],
sm20=[0,-2,47,-1,0,-4,0,-4,-1,-4,47,-56,47,-77,47,47],
sm21=[0,-2,48,-1,0,-4,0,-4,-1,-4,48,-23,49,-32,48,-77,48,48],
sm22=[0,-2,8,-1,0,-4,0,-4,-1,-140,50],
sm23=[0,-2,8,-1,0,-4,0,-4,-1,-139,51],
sm24=[0,-2,52,-1,0,-4,0,-4,-1,-4,52,-23,52,-32,52,-77,52,52],
sm25=[0,-2,8,-1,0,-4,0,-4,-1,-4,53,-56,54,-77,31,32],
sm26=[0,-1,55,56,-1,57,58,59,60,61,62,-4,-1,63,-2,64],
sm27=[0,-4,0,-4,0,-4,-1,-61,65],
sm28=[0,-2,8,-1,0,-4,0,-4,-1,-4,66,-56,67,-77,31,32],
sm29=[0,68,68,68,-1,68,68,68,68,68,68,-4,-1,69,-2,68],
sm30=[0,-4,0,-4,0,-4,-1,-61,70],
sm31=[0,-2,38,-1,0,-4,0,-4,-1,-4,71,-23,71,-27,40,-2,41,-1,71,-69,42,-7,71,71],
sm32=[0,-2,72,-1,0,-4,0,-4,-1,-4,72,-23,72,-27,72,-2,72,-1,72,-69,72,-7,72,72],
sm33=[0,-2,73,-1,0,-4,0,-4,-1,-4,73,-23,73,-27,73,-2,73,-1,73,-69,73,-7,73,73],
sm34=[0,-4,0,-4,0,-66,74],
sm35=[0,-4,0,-4,0,-5,75,-2,76],
sm36=[0,-2,77,-1,0,-4,0,-4,-1,-4,77,-56,77,-77,77,77],
sm37=[0,-2,8,-1,0,-4,0,-4,-1,-139,78,79],
sm38=[0,-4,0,-4,0,-4,-1,-140,80],
sm39=[0,-2,81,-1,0,-4,0,-4,-1,-4,81,-23,81,-32,81,-77,81,81],
sm40=[0,-4,0,-4,0,-4,-1,-139,82],
sm41=[0,-1,55,56,-1,57,58,59,60,61,62,-4,-1,83,-2,64],
sm42=[0,-4,0,-4,0,-4,-1,-61,84],
sm43=[0,-4,0,-4,0,-4,-1,85],
sm44=[0,-2,8,-1,0,-4,0,-4,-1],
sm45=[0,-1,55,56,-1,57,58,59,60,61,62,-4,-1,86,-2,64],
sm46=[0,-1,87,87,-1,87,87,87,87,87,87,-4,-1,87,-2,87],
sm47=[0,-1,88,88,-1,88,88,88,88,88,88,-4,-1,88,-2,88],
sm48=[0,-1,55,56,-1,57,58,59,60,61,0,-4,-1,-3,64,-39,89],
sm49=[0,-1,90,90,-1,91,90,90,90,90,0,-4,-1,-3,90,-39,90],
sm50=[0,-1,55,56,-1,57,58,59,60,61,92,-4,-1,92,-2,92],
sm51=[0,-1,93,93,-1,93,93,93,93,93,93,-4,-1,93,-2,93],
sm52=[0,-1,94,94,-1,94,94,94,94,94,94,-4,-1,94,-2,94],
sm53=[0,-2,8,-1,0,-4,0,-4,-1,-146,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],
sm54=[0,95,95,95,-1,95,95,95,95,95,95,-4,-1,95,-2,95],
sm55=[0,96,96,96,-1,96,96,96,96,96,96,-4,-1,97,-2,96],
sm56=[0,-4,0,-4,0,-4,-1,-61,98],
sm57=[0,-4,0,-4,0,-4,-1,-146,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],
sm58=[0,-2,99,-1,0,-4,0,-4,-1,-4,99,-23,99,-27,99,-2,99,-1,99,-69,99,-7,99,99],
sm59=[0,-4,0,-4,0,-5,75,-2,100],
sm60=[0,-4,0,-4,0,-8,100],
sm61=[0,-4,0,-4,0,-6,101],
sm62=[0,-2,102,-1,0,-4,0,-4,-1,-4,102,-56,102,-77,102,102],
sm63=[0,-2,103,-1,0,-4,0,-4,-1,-4,103,-56,103,-77,103,103],
sm64=[0,-2,104,-1,105,106,107,108,109,0,-3,110,-1],
sm65=[0,-2,111,-1,0,-4,0,-4,-1,-4,111,-23,111,-32,111,-77,111,111],
sm66=[0,-4,0,-4,0,-4,-1,112],
sm67=[0,113,113,113,-1,113,113,113,113,113,113,-4,-1,113,-2,113],
sm68=[0,-4,0,-4,0,-4,-1,-61,114],
sm69=[0,-1,115,115,-1,115,115,115,115,115,115,-4,-1,115,-2,115],
sm70=[0,-1,116,116,-1,116,116,116,116,116,116,-4,-1,116,-2,116],
sm71=[0,-1,117,117,-1,117,117,117,117,117,117,-4,-1,117,-2,117],
sm72=[0,-1,55,56,-1,57,58,59,60,61,0,-4,-1,-3,64,-39,118],
sm73=[0,-1,119,119,-1,119,119,119,119,119,0,-4,-1,-3,119,-39,119],
sm74=[0,-1,120,120,-1,120,120,120,120,120,0,-4,-1,-3,120,-39,120],
sm75=[0,-1,121,121,-1,122,121,121,121,121,0,-4,-1,-3,121,-39,121],
sm76=[0,-1,123,123,-1,123,123,123,123,123,0,-4,-1,-3,123,-39,123],
sm77=[0,-1,124,124,-1,124,124,124,124,124,124,-4,-1,124,-2,124],
sm78=[0,-4,0,-4,0,-4,-1,-61,125],
sm79=[0,-4,0,-4,0,-8,126],
sm80=[0,-4,0,-4,0,-66,127],
sm81=[0,-4,0,-4,0,-4,-1,-139,128],
sm82=[0,-2,104,-1,105,106,107,108,109,0,-3,110,-1,-139,129,129],
sm83=[0,-2,130,-1,130,130,130,130,130,0,-3,130,-1,-139,130,130],
sm84=[0,-2,131,-1,131,131,131,131,131,0,-3,131,-1,-139,131,131],
sm85=[0,-2,132,-1,132,132,132,132,132,0,-3,132,-1,-139,132,132],
sm86=[0,-4,0,-4,0,-4,-1,-140,133],
sm87=[0,-4,0,-4,0,-4,-1,-61,134],
sm88=[0,-4,0,-4,0,-4,-1,-61,135],
sm89=[0,136,136,136,-1,136,136,136,136,136,136,-4,-1,136,-2,136],
sm90=[0,-1,55,56,-1,57,58,59,60,61,137,-4,-1,137,-2,64],
sm91=[0,-1,138,138,-1,138,138,138,138,138,0,-4,-1,-3,138,-39,138],
sm92=[0,-1,139,139,-1,139,139,139,139,139,139,-4,-1,139,-2,139],
sm93=[0,-1,140,140,-1,140,140,140,140,140,140,-4,-1,140,-2,140],
sm94=[0,-1,141,141,-1,141,141,141,141,141,0,-4,-1,-3,141,-39,141],
sm95=[0,-4,0,-4,0,-4,-1,-61,142],
sm96=[0,143,143,143,-1,143,143,143,143,143,143,-4,-1,143,-2,143],
sm97=[0,-4,0,-4,0,-8,144],
sm98=[0,-2,145,-1,0,-4,0,-4,-1,-4,145,-56,145,-77,145,145],
sm99=[0,-2,146,-1,146,146,146,146,146,0,-3,146,-1,-139,146,146],
sm100=[0,-4,0,-4,0,-4,-1,-61,147],
sm101=[0,148,148,148,-1,148,148,148,148,148,148,-4,-1,148,-2,148],
sm102=[0,149,149,149,-1,149,149,149,149,149,149,-4,-1,149,-2,149],
sm103=[0,-1,150,150,-1,150,150,150,150,150,150,-4,-1,150,-2,150],
sm104=[0,151,151,151,-1,151,151,151,151,151,151,-4,-1,151,-2,151],
sm105=[0,152,152,152,-1,152,152,152,152,152,152,-4,-1,152,-2,152],

    // Symbol Lookup map
    lu = new Map([[1,1],[2,2],[4,3],[8,4],[16,5],[32,6],[64,7],[128,8],[256,9],[512,10],[3,11],[264,11],[200,13],[201,14],["</",15],["import",16],[">",76],["<",18],["/",19],["(",20],[")",21],[null,14],[",",23],["{",79],[";",68],["}",80],["supports",27],["@",28],["keyframes",29],["id",30],["from",31],["to",32],["and",33],["or",34],["not",35],["media",37],["only",38],[":",71],["<=",41],[">=",42],["=",43],["%",45],["px",46],["in",47],["rad",48],["url",49],["\"",154],["'",155],["+",77],["~",53],["||",54],["*",56],["|",57],["#",58],[".",59],["[",61],["]",62],["^=",63],["$=",64],["*=",65],["i",66],["s",67],["!",151],["important",70],["-",146],["_",74],["```",78],["``",81],["as",86],["export",87],["default",88],["if",90],["else",91],["var",92],["do",93],["while",94],["for",95],["await",96],["of",97],["continue",98],["break",99],["return",100],["throw",101],["with",102],["switch",103],["case",104],["try",105],["catch",106],["finally",107],["debugger",108],["let",109],["const",110],["function",111],["=>",112],["async",113],["class",114],["extends",115],["static",116],["get",117],["set",118],["new",119],["super",120],["target",121],["...",122],["this",123],["/=",124],["%=",125],["+=",126],["-=",127],["<<=",128],[">>=",129],[">>>=",130],["&=",131],["|=",132],["**=",133],["?",134],["&&",135],["^",136],["&",137],["==",138],["!=",139],["===",140],["!==",141],["instanceof",142],["<<",143],[">>",144],[">>>",145],["**",147],["delete",148],["void",149],["typeof",150],["++",152],["--",153],["null",156],["true",157],["false",158],["$",159],["f",161],["filter",162],["input",163],["area",164],["base",165],["br",166],["col",167],["command",168],["embed",169],["hr",170],["img",171],["keygen",172],["link",173],["meta",174],["param",175],["source",176],["track",177],["wbr",178]]),

    //Reverse Symbol Lookup map
    rlu = new Map([[1,1],[2,2],[3,4],[4,8],[5,16],[6,32],[7,64],[8,128],[9,256],[10,512],[11,3],[11,264],[13,200],[14,201],[15,"</"],[16,"import"],[76,">"],[18,"<"],[19,"/"],[20,"("],[21,")"],[14,null],[23,","],[79,"{"],[68,";"],[80,"}"],[27,"supports"],[28,"@"],[29,"keyframes"],[30,"id"],[31,"from"],[32,"to"],[33,"and"],[34,"or"],[35,"not"],[37,"media"],[38,"only"],[71,":"],[41,"<="],[42,">="],[43,"="],[45,"%"],[46,"px"],[47,"in"],[48,"rad"],[49,"url"],[154,"\""],[155,"'"],[77,"+"],[53,"~"],[54,"||"],[56,"*"],[57,"|"],[58,"#"],[59,"."],[61,"["],[62,"]"],[63,"^="],[64,"$="],[65,"*="],[66,"i"],[67,"s"],[151,"!"],[70,"important"],[146,"-"],[74,"_"],[78,"```"],[81,"``"],[86,"as"],[87,"export"],[88,"default"],[90,"if"],[91,"else"],[92,"var"],[93,"do"],[94,"while"],[95,"for"],[96,"await"],[97,"of"],[98,"continue"],[99,"break"],[100,"return"],[101,"throw"],[102,"with"],[103,"switch"],[104,"case"],[105,"try"],[106,"catch"],[107,"finally"],[108,"debugger"],[109,"let"],[110,"const"],[111,"function"],[112,"=>"],[113,"async"],[114,"class"],[115,"extends"],[116,"static"],[117,"get"],[118,"set"],[119,"new"],[120,"super"],[121,"target"],[122,"..."],[123,"this"],[124,"/="],[125,"%="],[126,"+="],[127,"-="],[128,"<<="],[129,">>="],[130,">>>="],[131,"&="],[132,"|="],[133,"**="],[134,"?"],[135,"&&"],[136,"^"],[137,"&"],[138,"=="],[139,"!="],[140,"==="],[141,"!=="],[142,"instanceof"],[143,"<<"],[144,">>"],[145,">>>"],[147,"**"],[148,"delete"],[149,"void"],[150,"typeof"],[152,"++"],[153,"--"],[156,"null"],[157,"true"],[158,"false"],[159,"$"],[161,"f"],[162,"filter"],[163,"input"],[164,"area"],[165,"base"],[166,"br"],[167,"col"],[168,"command"],[169,"embed"],[170,"hr"],[171,"img"],[172,"keygen"],[173,"link"],[174,"meta"],[175,"param"],[176,"source"],[177,"track"],[178,"wbr"]]),

    // States 
    state = [sm0,
sm1,
sm2,
sm3,
sm0,
sm4,
sm5,
sm6,
sm7,
sm8,
sm9,
sm10,
sm11,
sm12,
sm13,
sm14,
sm15,
sm16,
sm17,
sm17,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm19,
sm20,
sm21,
sm22,
sm23,
sm24,
sm25,
sm26,
sm27,
sm28,
sm29,
sm30,
sm31,
sm32,
sm33,
sm33,
sm33,
sm33,
sm34,
sm35,
sm36,
sm37,
sm38,
sm39,
sm40,
sm39,
sm41,
sm42,
sm43,
sm44,
sm45,
sm46,
sm47,
sm47,
sm47,
sm48,
sm49,
sm50,
sm51,
sm52,
sm52,
sm52,
sm52,
sm52,
sm52,
sm52,
sm53,
sm54,
sm55,
sm56,
sm57,
sm54,
sm58,
sm59,
sm60,
sm61,
sm62,
sm63,
sm63,
sm64,
sm64,
sm65,
sm65,
sm66,
sm44,
sm67,
sm44,
sm68,
sm69,
sm70,
sm70,
sm70,
sm71,
sm72,
sm73,
sm74,
sm75,
sm76,
sm77,
sm57,
sm67,
sm78,
sm79,
sm80,
sm81,
sm82,
sm83,
sm84,
sm85,
sm85,
sm85,
sm85,
sm85,
sm85,
sm85,
sm86,
sm44,
sm87,
sm88,
sm89,
sm90,
sm91,
sm92,
sm93,
sm93,
sm94,
sm95,
sm96,
sm97,
sm98,
sm99,
sm98,
sm100,
sm101,
sm102,
sm103,
sm104,
sm105],

/************ Functions *************/

    max = Math.max, min = Math.min,

    //Error Functions
    e = (...d)=>fn.defaultError(...d), 
    eh = [e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e],

    //Empty Function
    nf = ()=>-1, 

    //Environment Functions
    
redv = (ret, fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        const slice = o.slice(-plen);        o.length = ln + 1;        o[ln] = fn(slice, e, l, s, o, plen);        return ret;    },
rednv = (ret, Fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        const slice = o.slice(-plen);        o.length = ln + 1;        o[ln] = new Fn(slice, e, l, s, o, plen);        return ret;    },
redn = (ret, plen, t, e, o) => {        if (plen > 0) {            let ln = max(o.length - plen, 0);            o[ln] = o[o.length - 1];            o.length = ln + 1;        }        return ret;    },
shftf = (ret, fn, t, e, o, l, s) => (fn(o, e, l, s), ret),
R00_S=function (sym,env,lex,state,output,len) {return sym[0]},
R30_BODY301_group_list=function (sym,env,lex,state,output,len) {return ((sym[1] !== null) ? sym[0].push(sym[1]) : null,sym[0])},
R31_BODY301_group_list=function (sym,env,lex,state,output,len) {return (sym[0] !== null) ? [sym[0]] : []},
R50_IMPORT_TAG=function (sym,env,lex,state,output,len) {return fn.element_selector(sym[1],sym[2],null,env,lex)},
R70_BASIC_BINDING=function (sym,env,lex,state,output,len) {return new fn.wick_binding(sym[2],null,env,lex)},
I71_BASIC_BINDING=function (sym,env,lex,state,output,len) {env.start = lex.off+2},
R80_CALL_BINDING=function (sym,env,lex,state,output,len) {return new fn.wick_binding(sym[2],sym[5],env,lex)},
R81_CALL_BINDING=function (sym,env,lex,state,output,len) {return new fn.wick_binding(sym[2],sym[4],env,lex)},
R140_css_STYLE_SHEET=function (sym,env,lex,state,output,len) {return new fn.ruleset(sym[0],sym[1])},
R141_css_STYLE_SHEET=function (sym,env,lex,state,output,len) {return new fn.ruleset(null,sym[0])},
R142_css_STYLE_SHEET=function (sym,env,lex,state,output,len) {return new fn.ruleset(sym[0],null)},
R143_css_STYLE_SHEET=function (sym,env,lex,state,output,len) {return new fn.ruleset(null,null)},
R150_css_COMPLEX_SELECTOR_list=function (sym,env,lex,state,output,len) {return ((sym[1] !== null) ? sym[0].push(sym[2]) : null,sym[0])},
R160_css_STYLE_RULE=function (sym,env,lex,state,output,len) {return new fn.stylerule(sym[0],sym[2])},
R161_css_STYLE_RULE=function (sym,env,lex,state,output,len) {return new fn.stylerule(null,sym[1])},
C270_css_keyframes=function (sym,env,lex,state,output,len) {this.keyframes = sym[4];},
C300_css_keyframes_blocks=function (sym,env,lex,state,output,len) {this.selectors = sym[0];this.props = sym[2].props;},
R590_css_general_enclosed6202_group_list=function (sym,env,lex,state,output,len) {return sym[0] + sym[1]},
R591_css_general_enclosed6202_group_list=function (sym,env,lex,state,output,len) {return sym[0] + ""},
R880_css_TYPE_SELECTOR=function (sym,env,lex,state,output,len) {return new fn.type_selector([sym[0],sym[1]])},
R881_css_TYPE_SELECTOR=function (sym,env,lex,state,output,len) {return new fn.type_selector([sym[0]])},
R910_css_WQ_NAME=function (sym,env,lex,state,output,len) {return [sym[0],sym[1]]},
R911_css_WQ_NAME=function (sym,env,lex,state,output,len) {return [sym[0]]},
R1050_css_declaration_list=function (sym,env,lex,state,output,len) {return (sym[0].push(sym[1]),sym[0])},
R1051_css_declaration_list=function (sym,env,lex,state,output,len) {return (sym[0].push(...sym[1]),sym[0])},
R1100_css_declaration_values=function (sym,env,lex,state,output,len) {return sym.join("")},
R1160_wickup_WICKUP_PLUGIN=function (sym,env,lex,state,output,len) {return sym[1]},
R1210_wickup_HORIZONTAL_RULE=function (sym,env,lex,state,output,len) {return fn.element_selector("hr",null,null,env,lex)},
R1270_wickup_HEADER=function (sym,env,lex,state,output,len) {return fn.element_selector("h" + Math.min(sym[0].length,6),null,sym[1],env,lex)},
I1271_wickup_HEADER=function (sym,env,lex,state,output,len) {console.log("ASDASDASDSA")},
R1320_wickup_BLOCK_QUOTES=function (sym,env,lex,state,output,len) {return fn.element_selector("blockquote",null,sym[2],env,lex,sym[0].length)},
R1321_wickup_BLOCK_QUOTES=function (sym,env,lex,state,output,len) {return fn.element_selector("blockquote",null,sym[1],env,lex,sym[0].length)},
R1380_wickup_UNORDERED_LIST_ITEM=function (sym,env,lex,state,output,len) {return fn.element_selector("li",null,sym[2],env,lex,sym[0].length)},
R1381_wickup_UNORDERED_LIST_ITEM=function (sym,env,lex,state,output,len) {return fn.element_selector("li",null,sym[1],env,lex,sym[0].length)},
R1420_wickup_CODE_BLOCK2711_group=function (sym,env,lex,state,output,len) {return fn.element_selector("code",null,[new fn.text([sym[0] + sym[1]],env)],env,lex)},
R1421_wickup_CODE_BLOCK2711_group=function (sym,env,lex,state,output,len) {return fn.element_selector("code",null,[new fn.text([sym[0]],env)],env,lex)},
R1422_wickup_CODE_BLOCK2711_group=function (sym,env,lex,state,output,len) {return fn.element_selector("code",null,[new fn.text([],env)],env,lex)},
R1440_wickup_CODE_BLOCK=function (sym,env,lex,state,output,len) {return fn.element_selector("pre",null,sym[3],env,lex)},
R1441_wickup_CODE_BLOCK=function (sym,env,lex,state,output,len) {return fn.element_selector("pre",null,sym[2],env,lex)},
R1450_wickup_LINK=function (sym,env,lex,state,output,len) {return fn.element_selector("a",[new fn.attribute(["href","",sym[1]])],[sym[4]],env,lex)},
R1470_wickup_ITALIC_BOLD_EMPHASIS=function (sym,env,lex,state,output,len) {return fn.element_selector("i",null,[fn.element_selector("b",null,sym[1],env,lex)],env,lex)},
R1490_wickup_BOLD_EMPHASIS=function (sym,env,lex,state,output,len) {return fn.element_selector("b",null,sym[1],env,lex)},
R1510_wickup_EMPHASIS=function (sym,env,lex,state,output,len) {return fn.element_selector("i",null,sym[1],env,lex)},
R1520_wickup_CODE_QUOTE=function (sym,env,lex,state,output,len) {return fn.element_selector("code",null,[new fn.text([sym[1]],env)],env,lex)},
I1580_js_javascript=function (sym,env,lex,state,output,len) {env.IS_MODULE = false},
R1590_js_start=function (sym,env,lex,state,output,len) {return (env.IS_MODULE) ? new fn.module(sym[0]) : new fn.script(sym[0])},
I1640_js_module_item=function (sym,env,lex,state,output,len) {env.IS_MODULE = true},
R1650_js_import_declaration=function (sym,env,lex,state,output,len) {return new fn.import_declaration(sym[2],sym[1])},
R1651_js_import_declaration=function (sym,env,lex,state,output,len) {return new fn.import_declaration(sym[1])},
R1660_js_import_clause=function (sym,env,lex,state,output,len) {return [sym[0],sym[2]]},
R1710_js_named_imports=function (sym,env,lex,state,output,len) {return new fn.named_imports(sym[1])},
R1711_js_named_imports=function (sym,env,lex,state,output,len) {return new fn.named_imports(null)},
R1730_js_import_specifier=function (sym,env,lex,state,output,len) {return new fn.import_specifier(sym[0])},
R1731_js_import_specifier=function (sym,env,lex,state,output,len) {return new fn.import_specifier(sym[0],sym[1])},
R1760_js_export_declaration=function (sym,env,lex,state,output,len) {return new fn.export_declaration(null,sym[2],false)},
R1761_js_export_declaration=function (sym,env,lex,state,output,len) {return new fn.export_declaration(sym[1],sym[2],false)},
R1762_js_export_declaration=function (sym,env,lex,state,output,len) {return new fn.export_declaration(sym[1],null,false)},
R1763_js_export_declaration=function (sym,env,lex,state,output,len) {return new fn.export_declaration(sym[1],null,true)},
R1790_js_export_clause=function (sym,env,lex,state,output,len) {return new fn.export_clause(sym[1])},
R1791_js_export_clause=function (sym,env,lex,state,output,len) {return new fn.export_clause(null)},
R1800_js_export_specifier=function (sym,env,lex,state,output,len) {return new fn.export_specifier(sym[0])},
R1801_js_export_specifier=function (sym,env,lex,state,output,len) {return new fn.export_specifier(sym[0],sym[1])},
R1980_js_iteration_statement=function (sym,env,lex,state,output,len) {return (new fn.for_statement(sym[2],sym[4],sym[6],sym[8]))},
I1981_js_iteration_statement=function (sym,env,lex,state,output,len) {env.ASI = false;},
I1982_js_iteration_statement=function (sym,env,lex,state,output,len) {env.ASI = true;},
R1983_js_iteration_statement=function (sym,env,lex,state,output,len) {return (new fn.for_statement(sym[2],sym[3],sym[5],sym[7]))},
R1984_js_iteration_statement=function (sym,env,lex,state,output,len) {return (new fn.for_in_statement(sym[2],sym[4],sym[6]))},
R1985_js_iteration_statement=function (sym,env,lex,state,output,len) {return (new fn.for_of_statement(sym[1],sym[3],sym[5],sym[7]))},
R1986_js_iteration_statement=function (sym,env,lex,state,output,len) {return (new fn.for_statement(sym[2],sym[4],sym[5],sym[7]))},
R1987_js_iteration_statement=function (sym,env,lex,state,output,len) {return (new fn.for_statement(sym[2],sym[4],sym[6],sym[7]))},
R1988_js_iteration_statement=function (sym,env,lex,state,output,len) {return (new fn.for_statement(sym[2],null,sym[4],sym[6]))},
R1989_js_iteration_statement=function (sym,env,lex,state,output,len) {return (new fn.for_statement(sym[2],sym[3],null,sym[6]))},
R19810_js_iteration_statement=function (sym,env,lex,state,output,len) {return (new fn.for_of_statement(null,sym[2],sym[4],sym[6]))},
R19811_js_iteration_statement=function (sym,env,lex,state,output,len) {return (new fn.for_statement(sym[2],sym[3],sym[4],sym[6]))},
R19812_js_iteration_statement=function (sym,env,lex,state,output,len) {return (new fn.for_statement(sym[2],sym[3],sym[5],sym[6]))},
R19813_js_iteration_statement=function (sym,env,lex,state,output,len) {return (new fn.for_statement(sym[2],sym[4],sym[5],sym[6]))},
R19814_js_iteration_statement=function (sym,env,lex,state,output,len) {return (new fn.for_statement(sym[2],null,null,sym[5]))},
R19815_js_iteration_statement=function (sym,env,lex,state,output,len) {return (new fn.for_statement(sym[2],sym[3],sym[4],sym[5]))},
R2010_js_continue_statement=function (sym,env,lex,state,output,len) {return (new fn.continue_statement(sym[1]))},
R2011_js_continue_statement=function (sym,env,lex,state,output,len) {return (new fn.continue_statement(null))},
R2020_js_break_statement=function (sym,env,lex,state,output,len) {return (new fn.break_statement(sym[1]))},
R2021_js_break_statement=function (sym,env,lex,state,output,len) {return (new fn.break_statement(null))},
R2030_js_return_statement=function (sym,env,lex,state,output,len) {return new fn.return_statement(sym[1])},
R2031_js_return_statement=function (sym,env,lex,state,output,len) {return new fn.return_statement(null)},
R2040_js_throw_statement=function (sym,env,lex,state,output,len) {return new fn.throw_statement(sym[1])},
R2050_js_with_statement=function (sym,env,lex,state,output,len) {return new fn.with_statement(sym[2],sym[4])},
R2060_js_switch_statement=function (sym,env,lex,state,output,len) {return new fn.switch_statement(sym[2],sym[4])},
R2070_js_case_block=function (sym,env,lex,state,output,len) {return []},
R2071_js_case_block=function (sym,env,lex,state,output,len) {return sym[1].concat(sym[2].concat(sym[3]))},
R2072_js_case_block=function (sym,env,lex,state,output,len) {return sym[1].concat(sym[2])},
R2080_js_case_clauses=function (sym,env,lex,state,output,len) {return sym[0].concat(sym[1])},
R2090_js_case_clause=function (sym,env,lex,state,output,len) {return (new fn.case_statement(sym[1],sym[3]))},
R2091_js_case_clause=function (sym,env,lex,state,output,len) {return (new fn.case_statement(sym[1],null))},
R2100_js_default_clause=function (sym,env,lex,state,output,len) {return (new fn.default_case_statement(sym[2]))},
R2101_js_default_clause=function (sym,env,lex,state,output,len) {return (new fn.default_case_statement(null))},
R2140_js_try_statement=function (sym,env,lex,state,output,len) {return (new fn.try_statement(sym[1],sym[2]))},
R2141_js_try_statement=function (sym,env,lex,state,output,len) {return (new fn.try_statement(sym[1],null,sym[2]))},
R2142_js_try_statement=function (sym,env,lex,state,output,len) {return (new fn.try_statement(sym[1],sym[2],sym[3]))},
R2200_js_variable_declaration_list=function (sym,env,lex,state,output,len) {return (sym[0].push(sym[2]),sym[0])},
R2230_js_let_or_const=function (sym,env,lex,state,output,len) {return "let"},
R2231_js_let_or_const=function (sym,env,lex,state,output,len) {return "const"},
R2270_js_function_declaration=function (sym,env,lex,state,output,len) {return new fn.function_declaration(sym[1],sym[3],sym[6])},
R2271_js_function_declaration=function (sym,env,lex,state,output,len) {return new fn.function_declaration(null,sym[2],sym[5])},
R2272_js_function_declaration=function (sym,env,lex,state,output,len) {return new fn.function_declaration(sym[1],null,sym[5])},
R2273_js_function_declaration=function (sym,env,lex,state,output,len) {return new fn.function_declaration(sym[1],sym[3],null)},
R2274_js_function_declaration=function (sym,env,lex,state,output,len) {return new fn.function_declaration(null,null,sym[4])},
R2275_js_function_declaration=function (sym,env,lex,state,output,len) {return new fn.function_declaration(null,sym[2],null)},
R2276_js_function_declaration=function (sym,env,lex,state,output,len) {return new fn.function_declaration(sym[1],null,null)},
R2277_js_function_declaration=function (sym,env,lex,state,output,len) {return new fn.function_declaration(null,null,null)},
R2350_js_arrow_function=function (sym,env,lex,state,output,len) {return new fn.arrow_function_declaration(null,sym[0],sym[2])},
R2440_js_class_tail=function (sym,env,lex,state,output,len) {return new fn.class_tail(sym)},
R2441_js_class_tail=function (sym,env,lex,state,output,len) {return new fn.class_tail([null,...sym[0]])},
R2442_js_class_tail=function (sym,env,lex,state,output,len) {return new fn.class_tail([sym[0],null,null])},
R2443_js_class_tail=function (sym,env,lex,state,output,len) {return null},
R2470_js_class_element_list=function (sym,env,lex,state,output,len) {return (sym[0].push(sym[1]))},
R2480_js_class_element=function (sym,env,lex,state,output,len) {return ((sym[1].static = true,sym[1]))},
R2550_js_new_expression=function (sym,env,lex,state,output,len) {return new fn.new_expression(sym[1],null)},
R2560_js_member_expression=function (sym,env,lex,state,output,len) {return new fn.member_expression(sym[0],sym[2],true)},
R2561_js_member_expression=function (sym,env,lex,state,output,len) {return new fn.member_expression(sym[0],sym[2],false)},
R2562_js_member_expression=function (sym,env,lex,state,output,len) {return new fn.new_expression(sym[1],sym[2])},
R2620_js_arguments=function (sym,env,lex,state,output,len) {return new fn.argument_list(sym[1])},
R2621_js_arguments=function (sym,env,lex,state,output,len) {return new fn.argument_list(null)},
R2760_js_element_list=function (sym,env,lex,state,output,len) {return [sym[1]]},
R2761_js_element_list=function (sym,env,lex,state,output,len) {return ((sym[0].push(sym[2]),sym[0]))},
R2960_js_cover_parenthesized_expression_and_arrow_parameter_list=function (sym,env,lex,state,output,len) {return new fn.parenthasized(sym[1])},
R2961_js_cover_parenthesized_expression_and_arrow_parameter_list=function (sym,env,lex,state,output,len) {return new fn.parenthasized(new fn.spread_element(sym.slice(1,3)))},
R2962_js_cover_parenthesized_expression_and_arrow_parameter_list=function (sym,env,lex,state,output,len) {return new fn.parenthasized(Array.isArray(sym[0]) ? ((sym[1].push(new fn.spread_element(sym.slice(3,5))),sym[1])) : [sym[0],new fn.spread_element(sym.slice(3,5))])},
R3270_html_BODY=function (sym,env,lex,state,output,len) {return (sym[1].import_list = sym[0],sym[1])},
R3290_html_TAG=function (sym,env,lex,state,output,len) {return fn.element_selector(sym[1],sym[2],sym[4],env,lex)},
R3291_html_TAG=function (sym,env,lex,state,output,len) {return fn.element_selector(sym[1],sym[2],sym[3],env,lex)},
R3292_html_TAG=function (sym,env,lex,state,output,len) {return fn.element_selector(sym[1],null,sym[3],env,lex)},
R3293_html_TAG=function (sym,env,lex,state,output,len) {return fn.element_selector(sym[1],null,null,env,lex)},
R3294_html_TAG=function (sym,env,lex,state,output,len) {return fn.element_selector(sym[1],null,sym[2],env,lex)},

    //Sparse Map Lookup
    lsm = (index, map) => {    if (map[0] == 0xFFFFFFFF) return map[index + 1];    for (let i = 1, ind = 0, l = map.length, n = 0; i < l && ind <= index; i++) {        if (ind !== index) {            if ((n = map[i]) > -1) ind++;            else ind += -n;        } else return map[i];    }    return -1;},

    //State Action Functions
    state_funct = [()=>(34),
(...v)=>(redv(5,R00_S,1,0,...v)),
(...v)=>(redn(1031,1,...v)),
(...v)=>(redn(333831,1,...v)),
(...v)=>(redn(334855,1,...v)),
(...v)=>(redv(3079,R31_BODY301_group_list,1,0,...v)),
(...v)=>(redn(2055,1,...v)),
()=>(70),
()=>(50),
()=>(74),
()=>(78),
()=>(82),
()=>(86),
()=>(90),
()=>(94),
()=>(98),
()=>(102),
()=>(106),
()=>(110),
()=>(114),
()=>(118),
()=>(122),
()=>(126),
()=>(130),
()=>(134),
()=>(138),
()=>(142),
(...v)=>(redn(335879,1,...v)),
(...v)=>(redv(334859,R3270_html_BODY,2,0,...v)),
(...v)=>(redv(3083,R30_BODY301_group_list,2,0,...v)),
()=>(162),
()=>(158),
()=>(178),
()=>(174),
()=>(190),
()=>(186),
(...v)=>(redn(346119,1,...v)),
()=>(202),
(...v)=>(redv(350215,R00_S,1,0,...v)),
()=>(214),
()=>(210),
()=>(206),
(...v)=>(redn(347143,1,...v)),
(...v)=>(redn(337927,1,...v)),
()=>(218),
()=>(222),
(...v)=>(redv(342023,R911_css_WQ_NAME,1,0,...v)),
(...v)=>(rednv(343047,fn.attribute,1,0,...v)),
()=>(230),
()=>(238),
()=>(246),
(...v)=>(redn(344071,1,...v)),
()=>(254),
()=>(250),
()=>(326),
()=>(302),
()=>(306),
()=>(318),
()=>(322),
()=>(314),
()=>(310),
()=>(290),
()=>(262),
()=>(330),
()=>(334),
()=>(342),
()=>(338),
(...v)=>(redv(336911,R3293_html_TAG,3,0,...v)),
()=>(346),
()=>(350),
(...v)=>(redv(350219,R590_css_general_enclosed6202_group_list,2,0,...v)),
(...v)=>(redv(349191,R591_css_general_enclosed6202_group_list,1,0,...v)),
(...v)=>(redn(348167,1,...v)),
()=>(358),
()=>(366),
(...v)=>(redv(5139,R50_IMPORT_TAG,4,0,...v)),
(...v)=>(redv(342027,R1050_css_declaration_list,2,0,...v)),
()=>(382),
()=>(386),
()=>(390),
(...v)=>(redv(344075,R1160_wickup_WICKUP_PLUGIN,2,0,...v)),
()=>(394),
()=>(402),
()=>(406),
()=>(410),
(...v)=>(redn(339975,1,...v)),
(...v)=>(redv(338951,R31_BODY301_group_list,1,0,...v)),
(...v)=>(redn(340999,1,...v)),
()=>(442),
(...v)=>((redn(355331,0,...v))),
()=>(454),
(...v)=>(rednv(352263,fn.text,1,0,...v)),
(...v)=>(redv(351239,R591_css_general_enclosed6202_group_list,1,0,...v)),
(...v)=>(redn(353287,1,...v)),
(...v)=>(redv(336915,R3293_html_TAG,4,0,...v)),
(...v)=>(redv(336915,R50_IMPORT_TAG,4,0,...v)),
()=>(462),
()=>(466),
(...v)=>(redv(349195,R590_css_general_enclosed6202_group_list,2,0,...v)),
(...v)=>(redv(5143,R50_IMPORT_TAG,5,0,...v)),
()=>(478),
(...v)=>(rednv(343055,fn.attribute,3,0,...v)),
(...v)=>(redn(345095,1,...v)),
()=>(498),
()=>(502),
()=>(522),
()=>(518),
()=>(514),
()=>(510),
()=>(506),
(...v)=>(redv(344079,R1160_wickup_WICKUP_PLUGIN,3,0,...v)),
()=>(530),
(...v)=>(redv(336919,R50_IMPORT_TAG,5,0,...v)),
()=>(542),
(...v)=>(redv(338955,R30_BODY301_group_list,2,0,...v)),
(...v)=>(redv(118795,R1160_wickup_WICKUP_PLUGIN,2,0,...v)),
(...v)=>(redn(120839,1,...v)),
()=>(550),
(...v)=>(redv(128007,R31_BODY301_group_list,1,0,...v)),
(...v)=>(redn(119819,2,...v)),
(...v)=>(redn(355335,1,...v)),
()=>(566),
(...v)=>(redv(354311,R591_css_general_enclosed6202_group_list,1,0,...v)),
(...v)=>(redv(351243,R590_css_general_enclosed6202_group_list,2,0,...v)),
()=>(574),
(...v)=>(redv(5147,R50_IMPORT_TAG,6,0,...v)),
()=>(578),
()=>(582),
(...v)=>(redn(359431,1,...v)),
(...v)=>(redv(358407,R591_css_general_enclosed6202_group_list,1,0,...v)),
(...v)=>(redn(357383,1,...v)),
(...v)=>(redn(360455,1,...v)),
()=>(590),
()=>(598),
()=>(602),
(...v)=>(redv(336923,R3293_html_TAG,6,0,...v)),
(...v)=>(redv(130059,R1270_wickup_HEADER,2,0,...v)),
(...v)=>(redv(128011,R30_BODY301_group_list,2,0,...v)),
(...v)=>(redv(129031,R31_BODY301_group_list,1,0,...v)),
(...v)=>(redn(121863,1,...v)),
(...v)=>(redv(354315,R590_css_general_enclosed6202_group_list,2,0,...v)),
()=>(610),
(...v)=>(redv(336923,R3294_html_TAG,6,0,...v)),
(...v)=>(redn(4111,3,...v)),
(...v)=>(redv(356367,R1160_wickup_WICKUP_PLUGIN,3,0,...v)),
(...v)=>(redv(358411,R590_css_general_enclosed6202_group_list,2,0,...v)),
()=>(614),
(...v)=>(redv(336927,R50_IMPORT_TAG,7,0,...v)),
(...v)=>(redv(336927,R3292_html_TAG,7,0,...v)),
(...v)=>(redv(129035,R30_BODY301_group_list,2,0,...v)),
(...v)=>(redv(336927,R3291_html_TAG,7,0,...v)),
(...v)=>(redv(336931,R3290_html_TAG,8,0,...v))],

    //Goto Lookup Functions
    goto = [v=>lsm(v,gt0),
nf,
nf,
nf,
v=>lsm(v,gt1),
nf,
nf,
nf,
v=>lsm(v,gt2),
nf,
nf,
nf,
v=>lsm(v,gt3),
v=>lsm(v,gt4),
v=>lsm(v,gt5),
nf,
v=>lsm(v,gt6),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt7),
nf,
nf,
v=>lsm(v,gt8),
v=>lsm(v,gt9),
nf,
v=>lsm(v,gt7),
v=>lsm(v,gt10),
nf,
v=>lsm(v,gt7),
nf,
nf,
v=>lsm(v,gt11),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt12),
nf,
v=>lsm(v,gt13),
nf,
nf,
nf,
nf,
v=>lsm(v,gt14),
nf,
nf,
v=>lsm(v,gt15),
v=>lsm(v,gt16),
nf,
nf,
nf,
nf,
v=>lsm(v,gt17),
v=>lsm(v,gt18),
v=>lsm(v,gt19),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt2),
nf,
nf,
nf,
v=>lsm(v,gt20),
nf,
nf,
v=>lsm(v,gt21),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt22),
v=>lsm(v,gt23),
nf,
nf,
nf,
v=>lsm(v,gt24),
nf,
v=>lsm(v,gt25),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt26),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt27),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt28),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt29),
nf,
nf,
nf,
v=>lsm(v,gt30),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf];

function getToken(l, SYM_LU) {
    if (l.END) return 0; /*$eof*/

    switch (l.ty) {
        case 2:
            //*
            if (SYM_LU.has(l.tx)) return 14;
            /*/
                console.log(l.tx, SYM_LU.has(l.tx), SYM_LU.get(l.tx))
                if (SYM_LU.has(l.tx)) return SYM_LU.get(l.tx);
            //*/
            return 2;
        case 1:
            return 1;
        case 4:
            return 3;
        case 256:
            return 9;
        case 8:
            return 4;
        case 512:
            return 10;
        default:
            return SYM_LU.get(l.tx) || SYM_LU.get(l.ty);
    }
}

/************ Parser *************/

function parser(l, e = {}) {

    fn = e.functions;

    l.IWS = false;
    l.PARSE_STRING = true;

    if (symbols.length > 0) {
        symbols.forEach(s => { l.addSymbol(s) });
        l.tl = 0;
        l.next();
    }

    const recovery_chain = [];

    const o = [],
        ss = [0, 0];

    let time = 1000000,
        RECOVERING = 100,
        RESTARTED = true,
        tk = getToken(l, lu),
        p = l.copy(),
        sp = 1,
        len = 0,
        reduceStack = (e.reduceStack = []),
        ROOT = 10000,
        off = 0;

    outer:

        while (time-- > 0) {

            const fn = lsm(tk, state[ss[sp]]) || 0;

            let r,
                gt = -1;

            if (fn == 0) {
                /*Ignore the token*/
                tk = getToken(l.next(), lu);
                continue;
            }

            if (fn > 0) {
                r = state_funct[fn - 1](tk, e, o, l, ss[sp - 1]);
            } else {

                if (tk == 14) {
                    tk = lu.get(l.tx);
                    continue;
                }

                if (l.ty == 8 && l.tl > 1) {
                    // Make sure that special tokens are not getting in the way
                    l.tl = 0;
                    // This will skip the generation of a custom symbol
                    l.next(l, false);

                    if (l.tl == 1)
                        continue;
                }

                if (RECOVERING > 1 && !l.END) {

                    if (tk !== lu.get(l.ty)) {
                        tk = lu.get(l.ty);
                        continue;
                    }

                    if (tk !== 13) {
                        tk = 13;
                        RECOVERING = 1;
                        continue;
                    }
                }

                tk = getToken(l, lu);

                const recovery_token = eh[ss[sp]](tk, e, o, l, p, ss[sp], (lex) => getToken(lex, lu));

                if (RECOVERING > 0 && recovery_token >= 0) {
                    RECOVERING = -1; /* To prevent infinite recursion */
                    tk = recovery_token;
                    l.tl = 0; /*reset current token */
                    continue;
                }
            }

            switch (r & 3) {
                case 0:
                    /* ERROR */

                    if (tk == "$eof")
                        l.throw("Unexpected end of input");

                    l.throw(`Unexpected token [${RECOVERING ? l.next().tx : l.tx}]`);
                    return [null];

                case 1:
                    /* ACCEPT */
                    break outer;

                case 2:

                    /*SHIFT */
                    o.push(l.tx);
                    ss.push(off, r >> 2);
                    sp += 2;
                    l.next();
                    off = l.off;
                    tk = getToken(l, lu);
                    RECOVERING++;
                    break;

                case 3:
                    /* REDUCE */
                    RESTARTED = true;

                    len = (r & 0x3FC) >> 1;

                    ss.length -= len;
                    sp -= len;
                    gt = goto[ss[sp]](r >> 10);

                    if (gt < 0)
                        l.throw("Invalid state reached!");

                    if (reduceStack.length > 0) {
                        let i = reduceStack.length - 1;
                        while (i > -1) {
                            let item = reduceStack[i--];

                            if (item.index == sp) {
                                item.action(output)
                            } else if (item.index > sp) {
                                reduceStack.length--;
                            } else {
                                break;
                            }
                        }
                    }

                    ss.push(off, gt);
                    sp += 2;
                    break;
            }
        }
    return o[0];
}; export default parser;