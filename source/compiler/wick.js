let fn = {}; const 
/************** Maps **************/

    /* Symbols To Inject into the Lexer */
    symbols = ["</","||","^=","$=","*=","<=",">=","...","<",">","==","!=","===","!==","**","++","--","<<",">>",">>>","&&","+=","-=","%=","/=","**=","<<=",">>=",">>>=","&=","|=","=>","//","/*"],

    /* Goto lookup maps */


    // State action lookup maps


    // Symbol Lookup map
    lu = new Map([[1,1],[2,2],[4,3],[8,4],[16,5],[32,6],[64,7],[128,8],[256,9],[512,10],[3,11],[264,11],[200,13],[201,14],["</",15],["import",16],[">",17],["<",18],["/",19],["(",20],[")",21],[null,14],[",",23],["{",24],[";",68],["}",26],["supports",27],["@",28],["keyframes",29],["id",30],["from",31],["to",32],["and",33],["or",34],["not",35],["media",37],["only",38],[":",71],["<=",41],[">=",42],["=",43],["%",45],["px",46],["in",47],["rad",48],["url",49],["\"",148],["'",149],["+",52],["~",53],["||",54],["*",56],["|",57],["#",58],[".",59],["[",61],["]",62],["^=",63],["$=",64],["*=",65],["i",66],["s",67],["!",141],["important",70],["-",136],["_",74],["as",76],["export",77],["default",78],["if",80],["else",81],["var",82],["do",83],["while",84],["for",85],["await",86],["of",87],["continue",88],["break",89],["return",90],["throw",91],["with",92],["switch",93],["case",94],["try",95],["catch",96],["finally",97],["debugger",98],["let",99],["const",100],["function",101],["=>",102],["async",103],["class",104],["extends",105],["static",106],["get",107],["set",108],["new",109],["super",110],["target",111],["...",112],["this",113],["/=",114],["%=",115],["+=",116],["-=",117],["<<=",118],[">>=",119],[">>>=",120],["&=",121],["|=",122],["**=",123],["?",124],["&&",125],["^",126],["&",127],["==",128],["!=",129],["===",130],["!==",131],["instanceof",132],["<<",133],[">>",134],[">>>",135],["**",137],["delete",138],["void",139],["typeof",140],["++",142],["--",143],["null",150],["true",151],["false",152],["$",153],["f",155],["filter",156],["input",157],["area",158],["base",159],["br",160],["col",161],["command",162],["embed",163],["hr",164],["img",165],["keygen",166],["link",167],["meta",168],["param",169],["source",170],["track",171],["wbr",172],["style",173],["script",174],["js",175]]),

    //Reverse Symbol Lookup map
    rlu = new Map([[1,1],[2,2],[3,4],[4,8],[5,16],[6,32],[7,64],[8,128],[9,256],[10,512],[11,3],[11,264],[13,200],[14,201],[15,"</"],[16,"import"],[17,">"],[18,"<"],[19,"/"],[20,"("],[21,")"],[14,null],[23,","],[24,"{"],[68,";"],[26,"}"],[27,"supports"],[28,"@"],[29,"keyframes"],[30,"id"],[31,"from"],[32,"to"],[33,"and"],[34,"or"],[35,"not"],[37,"media"],[38,"only"],[71,":"],[41,"<="],[42,">="],[43,"="],[45,"%"],[46,"px"],[47,"in"],[48,"rad"],[49,"url"],[148,"\""],[149,"'"],[52,"+"],[53,"~"],[54,"||"],[56,"*"],[57,"|"],[58,"#"],[59,"."],[61,"["],[62,"]"],[63,"^="],[64,"$="],[65,"*="],[66,"i"],[67,"s"],[141,"!"],[70,"important"],[136,"-"],[74,"_"],[76,"as"],[77,"export"],[78,"default"],[80,"if"],[81,"else"],[82,"var"],[83,"do"],[84,"while"],[85,"for"],[86,"await"],[87,"of"],[88,"continue"],[89,"break"],[90,"return"],[91,"throw"],[92,"with"],[93,"switch"],[94,"case"],[95,"try"],[96,"catch"],[97,"finally"],[98,"debugger"],[99,"let"],[100,"const"],[101,"function"],[102,"=>"],[103,"async"],[104,"class"],[105,"extends"],[106,"static"],[107,"get"],[108,"set"],[109,"new"],[110,"super"],[111,"target"],[112,"..."],[113,"this"],[114,"/="],[115,"%="],[116,"+="],[117,"-="],[118,"<<="],[119,">>="],[120,">>>="],[121,"&="],[122,"|="],[123,"**="],[124,"?"],[125,"&&"],[126,"^"],[127,"&"],[128,"=="],[129,"!="],[130,"==="],[131,"!=="],[132,"instanceof"],[133,"<<"],[134,">>"],[135,">>>"],[137,"**"],[138,"delete"],[139,"void"],[140,"typeof"],[142,"++"],[143,"--"],[150,"null"],[151,"true"],[152,"false"],[153,"$"],[155,"f"],[156,"filter"],[157,"input"],[158,"area"],[159,"base"],[160,"br"],[161,"col"],[162,"command"],[163,"embed"],[164,"hr"],[165,"img"],[166,"keygen"],[167,"link"],[168,"meta"],[169,"param"],[170,"source"],[171,"track"],[172,"wbr"],[173,"style"],[174,"script"],[175,"js"]]),

    // States 
    state = [sm0,
sm1,
sm2,
sm2,
sm3,
sm4,
sm5,
sm6,
sm7,
sm8,
sm9,
sm10,
sm11,
sm12,
sm13,
sm14,
sm15,
sm16,
sm16,
sm17,
sm18,
sm19,
sm20,
sm20,
sm21,
sm21,
sm21,
sm21,
sm21,
sm21,
sm21,
sm21,
sm21,
sm21,
sm21,
sm21,
sm21,
sm21,
sm22,
sm23,
sm24,
sm25,
sm26,
sm27,
sm28,
sm28,
sm29,
sm30,
sm31,
sm32,
sm33,
sm34,
sm35,
sm36,
sm37,
sm38,
sm39,
sm40,
sm41,
sm42,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm44,
sm43,
sm43,
sm45,
sm46,
sm47,
sm48,
sm49,
sm49,
sm49,
sm50,
sm51,
sm51,
sm51,
sm52,
sm53,
sm54,
sm55,
sm56,
sm57,
sm57,
sm57,
sm58,
sm58,
sm58,
sm58,
sm59,
sm59,
sm60,
sm61,
sm62,
sm63,
sm64,
sm65,
sm66,
sm67,
sm68,
sm68,
sm43,
sm69,
sm70,
sm71,
sm72,
sm73,
sm74,
sm75,
sm75,
sm76,
sm77,
sm78,
sm79,
sm80,
sm81,
sm82,
sm83,
sm43,
sm84,
sm85,
sm86,
sm86,
sm86,
sm87,
sm88,
sm89,
sm72,
sm90,
sm91,
sm92,
sm93,
sm94,
sm95,
sm96,
sm97,
sm98,
sm99,
sm100,
sm101,
sm101,
sm102,
sm102,
sm102,
sm102,
sm102,
sm102,
sm102,
sm102,
sm102,
sm102,
sm102,
sm102,
sm102,
sm102,
sm102,
sm102,
sm103,
sm104,
sm105,
sm106,
sm107,
sm108,
sm109,
sm109,
sm110,
sm111,
sm112,
sm113,
sm114,
sm106,
sm115,
sm116,
sm116,
sm117,
sm118,
sm119,
sm120,
sm121,
sm122,
sm123,
sm43,
sm43,
sm43,
sm124,
sm125,
sm126,
sm126,
sm126,
sm126,
sm126,
sm126,
sm126,
sm126,
sm126,
sm126,
sm126,
sm126,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm43,
sm127,
sm44,
sm128,
sm51,
sm51,
sm51,
sm51,
sm129,
sm130,
sm131,
sm87,
sm132,
sm133,
sm134,
sm135,
sm136,
sm137,
sm138,
sm139,
sm140,
sm141,
sm43,
sm142,
sm43,
sm140,
sm143,
sm144,
sm47,
sm145,
sm146,
sm147,
sm148,
sm149,
sm150,
sm150,
sm150,
sm150,
sm150,
sm150,
sm151,
sm151,
sm152,
sm153,
sm154,
sm155,
sm155,
sm155,
sm155,
sm155,
sm155,
sm155,
sm156,
sm153,
sm157,
sm158,
sm159,
sm160,
sm160,
sm161,
sm43,
sm162,
sm163,
sm164,
sm72,
sm140,
sm43,
sm165,
sm166,
sm167,
sm168,


/************ Functions *************/

    max = Math.max, min = Math.min,

    //Error Functions
    e = (...d)=>fn.defaultError(...d), 
    eh = [e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,


    //State Action Functions
    state_funct = [e=>394,
e=>350,
e=>82,
e=>38,
e=>402,
e=>158,
e=>254,
e=>262,
e=>398,
e=>442,
e=>354,
e=>86,
e=>446,
e=>438,
e=>458,
e=>462,
e=>466,
e=>422,
e=>474,
e=>478,
e=>482,
e=>490,
e=>486,
e=>470,
e=>494,
e=>498,
e=>530,
e=>534,
e=>522,
e=>514,
e=>294,
e=>406,
e=>310,
e=>258,
e=>242,
e=>246,
e=>250,
e=>266,
e=>274,
e=>278,
e=>386,
e=>390,
e=>382,
e=>374,
e=>378,
e=>346,
(...v)=>redv(5,R00_S,1,0,...v),
(...v)=>redn(1031,1,...v),
(...v)=>redn(290823,1,...v),
(...v)=>redn(291847,1,...v),
(...v)=>redv(3079,R31_undefined501_group_list,1,0,...v),
(...v)=>redn(2055,1,...v),
e=>570,
e=>550,
e=>574,
e=>578,
e=>582,
e=>586,
e=>590,
e=>594,
e=>598,
e=>602,
e=>606,
e=>610,
e=>614,
e=>618,
e=>622,
e=>626,
e=>630,
e=>634,
e=>638,
e=>642,
(...v)=>redn(292871,1,...v),
(...v)=>redv(229383,R2240_js_primary_expression,1,0,...v),
(...v)=>(redv(118791,R00_S,1,0,...v),shftf(118791,I1160_js_javascript,...v)),
(...v)=>redv(119815,R1170_js_start,1,0,...v),
(...v)=>redn(120839,1,...v),
(...v)=>rednv(123911,fn.statements,1,0,...v),
e=>654,
(...v)=>redv(122887,R31_undefined501_group_list,1,0,...v),
(...v)=>redn(121863,1,...v),
(...v)=>(redn(124935,1,...v),shftf(124935,I1220_js_module_item,...v)),
(...v)=>redn(124935,1,...v),
e=>690,
e=>686,
e=>718,
e=>698,
e=>714,
(...v)=>redn(147463,1,...v),
(...v)=>redn(148487,1,...v),
(...v)=>redn(152583,1,...v),
e=>738,
(...v)=>rednv(216071,fn.expression_list,1,0,...v),
e=>742,
(...v)=>redv(215047,R31_undefined501_group_list,1,0,...v),
(...v)=>redn(214023,1,...v),
(...v)=>redn(242695,1,...v),
(...v)=>redn(258055,1,...v),
e=>746,
e=>798,
e=>762,
e=>766,
e=>770,
e=>774,
e=>778,
e=>782,
e=>786,
e=>790,
e=>794,
e=>802,
e=>806,
e=>754,
e=>758,
(...v)=>redn(244743,1,...v),
e=>814,
e=>810,
(...v)=>redn(245767,1,...v),
e=>818,
(...v)=>redn(246791,1,...v),
e=>822,
(...v)=>redn(247815,1,...v),
e=>826,
(...v)=>redn(248839,1,...v),
e=>830,
(...v)=>redn(249863,1,...v),
e=>834,
e=>838,
e=>842,
e=>846,
(...v)=>redn(250887,1,...v),
e=>854,
e=>850,
e=>858,
e=>862,
e=>870,
e=>866,
(...v)=>redn(251911,1,...v),
e=>874,
e=>878,
e=>882,
(...v)=>redn(252935,1,...v),
e=>886,
e=>890,
(...v)=>redn(253959,1,...v),
e=>898,
e=>902,
e=>894,
(...v)=>redn(254983,1,...v),
(...v)=>redn(256007,1,...v),
(...v)=>redn(257031,1,...v),
e=>906,


    //Goto Lookup Functions
    goto = [v=>lsm(v,gt0),
nf,
nf,
nf,

nf,
v=>lsm(v,gt1),
nf,
nf,
nf,
v=>lsm(v,gt2),
nf,
nf,
nf,
nf,
v=>lsm(v,gt3),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt4),
v=>lsm(v,gt5),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt6),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt7),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt8),
v=>lsm(v,gt9),
v=>lsm(v,gt10),
v=>lsm(v,gt11),
v=>lsm(v,gt12),
v=>lsm(v,gt13),
v=>lsm(v,gt14),
nf,
v=>lsm(v,gt15),
v=>lsm(v,gt16),
nf,
v=>lsm(v,gt17),
v=>lsm(v,gt18),
v=>lsm(v,gt19),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt20),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt21),
v=>lsm(v,gt22),
nf,
v=>lsm(v,gt23),
v=>lsm(v,gt24),
v=>lsm(v,gt25),
nf,
nf,
nf,
v=>lsm(v,gt26),
nf,
nf,
v=>lsm(v,gt27),
v=>lsm(v,gt28),
nf,
nf,
nf,
nf,
v=>lsm(v,gt29),
nf,
nf,
nf,
v=>lsm(v,gt30),
v=>lsm(v,gt31),
v=>lsm(v,gt32),
nf,
v=>lsm(v,gt33),
v=>lsm(v,gt34),
nf,
nf,
nf,
nf,
v=>lsm(v,gt35),
nf,
v=>lsm(v,gt36),
v=>lsm(v,gt37),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt38),
v=>lsm(v,gt39),
v=>lsm(v,gt40),
nf,
v=>lsm(v,gt41),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt2),
v=>lsm(v,gt42),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt43),
nf,
v=>lsm(v,gt44),
v=>lsm(v,gt45),
nf,
nf,
v=>lsm(v,gt46),
v=>lsm(v,gt47),
nf,
v=>lsm(v,gt48),
nf,
nf,
nf,
v=>lsm(v,gt49),
v=>lsm(v,gt50),
v=>lsm(v,gt51),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt52),
v=>lsm(v,gt53),
v=>lsm(v,gt54),
v=>lsm(v,gt55),
v=>lsm(v,gt56),
v=>lsm(v,gt57),
v=>lsm(v,gt58),
v=>lsm(v,gt59),
v=>lsm(v,gt60),
v=>lsm(v,gt61),
v=>lsm(v,gt62),
v=>lsm(v,gt63),
v=>lsm(v,gt64),
v=>lsm(v,gt65),
v=>lsm(v,gt66),
v=>lsm(v,gt67),
v=>lsm(v,gt68),
v=>lsm(v,gt69),
v=>lsm(v,gt70),
v=>lsm(v,gt71),
v=>lsm(v,gt72),
v=>lsm(v,gt73),
v=>lsm(v,gt74),
v=>lsm(v,gt75),
v=>lsm(v,gt76),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt77),
v=>lsm(v,gt78),
v=>lsm(v,gt79),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt80),
nf,
v=>lsm(v,gt81),
v=>lsm(v,gt82),
v=>lsm(v,gt83),
v=>lsm(v,gt84),
nf,
nf,
v=>lsm(v,gt85),
nf,
nf,
v=>lsm(v,gt86),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt87),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt87),
nf,
v=>lsm(v,gt88),
v=>lsm(v,gt89),
nf,
nf,
nf,
nf,
v=>lsm(v,gt90),
nf,
nf,
nf,
v=>lsm(v,gt91),
v=>lsm(v,gt92),
v=>lsm(v,gt93),
nf,
nf,
v=>lsm(v,gt94),
nf,
v=>lsm(v,gt95),
nf,
nf,
v=>lsm(v,gt96),
v=>lsm(v,gt97),
nf,
nf,
nf,
v=>lsm(v,gt98),
v=>lsm(v,gt99),
v=>lsm(v,gt100),
nf,
v=>lsm(v,gt101),
v=>lsm(v,gt102),
nf,
v=>lsm(v,gt103),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt104),
nf,
v=>lsm(v,gt105),
nf,
v=>lsm(v,gt106),
nf,
nf,
v=>lsm(v,gt107),
v=>lsm(v,gt108),
nf,
v=>lsm(v,gt109),
nf,
nf,
v=>lsm(v,gt110),
v=>lsm(v,gt111),
v=>lsm(v,gt112),
nf,
v=>lsm(v,gt113),
nf,
nf,
v=>lsm(v,gt114),
v=>lsm(v,gt115),
nf,
v=>lsm(v,gt112),
v=>lsm(v,gt116),
nf,
v=>lsm(v,gt112),
nf,
nf,
v=>lsm(v,gt117),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt118),
nf,
v=>lsm(v,gt119),
v=>lsm(v,gt120),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt121),
nf,
v=>lsm(v,gt122),
nf,
nf,
v=>lsm(v,gt123),
v=>lsm(v,gt124),
nf,
nf,
nf,
nf,
v=>lsm(v,gt125),
nf,
v=>lsm(v,gt126),
v=>lsm(v,gt127),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt128),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt129),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt130),
nf,
nf,
nf,
nf,
v=>lsm(v,gt131),
nf,
v=>lsm(v,gt132),
nf,
nf,
nf,
nf,
v=>lsm(v,gt133),
nf,
nf,
nf,
v=>lsm(v,gt134),
nf,
v=>lsm(v,gt135),
nf,
nf,
v=>lsm(v,gt136),
nf,
nf,
nf,
v=>lsm(v,gt137),
nf,
nf,
nf,
nf,
v=>lsm(v,gt138),
nf,
v=>lsm(v,gt139),
nf,
v=>lsm(v,gt140),
v=>lsm(v,gt7),
v=>lsm(v,gt141),
nf,
v=>lsm(v,gt142),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt143),
nf,
nf,
v=>lsm(v,gt144),
nf,
v=>lsm(v,gt145),
nf,
nf,
v=>lsm(v,gt146),
nf,
nf,
v=>lsm(v,gt147),
nf,
nf,
nf,
nf,
v=>lsm(v,gt148),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt149),
nf,
nf,
nf,
v=>lsm(v,gt150),
nf,
v=>lsm(v,gt151),
nf,
nf,
v=>lsm(v,gt152),
nf,
nf,
nf,
nf,
v=>lsm(v,gt153),
nf,
nf,
v=>lsm(v,gt154),
v=>lsm(v,gt155),
nf,
v=>lsm(v,gt2),
nf,
nf,
nf,
v=>lsm(v,gt156),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt157),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt158),
nf,
nf,
v=>lsm(v,gt159),
nf,
nf,
v=>lsm(v,gt160),
nf,
nf,
v=>lsm(v,gt161),
v=>lsm(v,gt162),
v=>lsm(v,gt163),
nf,
nf,
nf,
nf,
v=>lsm(v,gt164),
v=>lsm(v,gt165),
nf,
nf,
nf,
v=>lsm(v,gt166),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt167),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt168),
nf,
v=>lsm(v,gt169),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt170),
nf,
v=>lsm(v,gt171),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt172),
nf,
nf,
nf,
v=>lsm(v,gt173),
v=>lsm(v,gt174),
v=>lsm(v,gt175),
v=>lsm(v,gt176),
nf,
v=>lsm(v,gt177),
v=>lsm(v,gt178),
v=>lsm(v,gt179),
nf,
v=>lsm(v,gt180),
nf,
nf,
v=>lsm(v,gt96),
v=>lsm(v,gt97),
nf,
v=>lsm(v,gt110),
v=>lsm(v,gt111),
nf,
nf,
v=>lsm(v,gt181),
v=>lsm(v,gt182),
v=>lsm(v,gt183),
v=>lsm(v,gt184),
nf,
v=>lsm(v,gt185),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt186),
v=>lsm(v,gt187),
nf,
v=>lsm(v,gt188),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt189),
nf,
nf,
v=>lsm(v,gt190),
nf,
nf,
nf,
v=>lsm(v,gt191),
nf,
v=>lsm(v,gt192),
nf,
nf,
v=>lsm(v,gt193),
v=>lsm(v,gt194),
v=>lsm(v,gt195),
nf,
v=>lsm(v,gt196),
v=>lsm(v,gt197),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt198),
nf,
nf,
nf,
nf,
v=>lsm(v,gt199),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt200),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt201),
v=>lsm(v,gt202),
nf,
v=>lsm(v,gt203),
nf,
nf,
v=>lsm(v,gt204),
nf,
v=>lsm(v,gt205),
v=>lsm(v,gt206),
nf,
nf,
nf,
v=>lsm(v,gt207),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt208),
v=>lsm(v,gt209),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt210),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt211),
nf,
nf,
nf,
v=>lsm(v,gt112),
v=>lsm(v,gt212),
v=>lsm(v,gt112),
v=>lsm(v,gt213),
v=>lsm(v,gt112),
v=>lsm(v,gt214),
nf,
nf,
nf,

nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt215),
v=>lsm(v,gt216),
nf,
nf,
v=>lsm(v,gt217),
nf,
v=>lsm(v,gt218),
nf,
v=>lsm(v,gt219),
nf,
v=>lsm(v,gt220),
v=>lsm(v,gt221),
nf,
v=>lsm(v,gt222),
v=>lsm(v,gt223),
nf,
v=>lsm(v,gt224),
v=>lsm(v,gt225),
nf,
v=>lsm(v,gt217),
nf,
v=>lsm(v,gt218),
nf,

nf,

nf,

nf,

nf,
nf,
nf,

nf,

nf,

nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt231),
nf,
nf,
nf,

nf,
nf,
nf,
v=>lsm(v,gt231),
nf,
nf,
nf,

nf,
v=>lsm(v,gt234),
nf,

nf,
v=>lsm(v,gt239),
nf,
nf,
nf,
nf,

nf,
v=>lsm(v,gt235),
v=>lsm(v,gt236),
v=>lsm(v,gt237),
v=>lsm(v,gt238),
nf,
v=>lsm(v,gt239),
nf,
nf,
nf,
nf,

nf,
v=>lsm(v,gt245),
nf,
nf,
nf,
v=>lsm(v,gt246),
nf,
nf,

nf,
v=>lsm(v,gt245),
nf,
v=>lsm(v,gt247),
nf,
nf,
v=>lsm(v,gt246),
nf,

nf,
nf,
v=>lsm(v,gt249),
v=>lsm(v,gt250),
nf,

nf,
nf,
nf,

nf,
nf,
v=>lsm(v,gt249),
v=>lsm(v,gt250),
nf,

nf,
nf,
nf,
v=>lsm(v,gt252),
v=>lsm(v,gt253),
nf,
v=>lsm(v,gt254),
nf,
nf,
nf,
nf,
v=>lsm(v,gt255),
nf,
v=>lsm(v,gt252),
v=>lsm(v,gt253),
nf,

nf,
nf,
v=>lsm(v,gt258),
nf,
nf,

nf,
nf,

nf,
nf,
v=>lsm(v,gt258),
nf,
nf,
v=>lsm(v,gt259),
nf,
nf,
nf,
nf,
v=>lsm(v,gt233),
nf,
nf,
nf,
nf,
v=>lsm(v,gt260),
v=>lsm(v,gt261),
v=>lsm(v,gt262),
v=>lsm(v,gt263),
v=>lsm(v,gt264),
v=>lsm(v,gt265),
v=>lsm(v,gt266),
nf,
nf,
v=>lsm(v,gt233),
nf,
nf,
nf,
v=>lsm(v,gt267),
nf,

nf,
nf,
nf,
nf,
nf,

nf,
v=>lsm(v,gt268),
nf,

nf,
nf,
nf,
v=>lsm(v,gt271),
nf,
v=>lsm(v,gt269),
v=>lsm(v,gt238),
v=>lsm(v,gt238),
nf,
nf,
v=>lsm(v,gt270),
nf,
nf,
nf,
v=>lsm(v,gt271),
nf,
nf,
nf,
v=>lsm(v,gt272),
v=>lsm(v,gt239),
nf,

nf,
v=>lsm(v,gt274),
v=>lsm(v,gt275),
nf,
nf,
nf,
nf,
v=>lsm(v,gt272),
v=>lsm(v,gt239),
nf,
v=>lsm(v,gt273),
nf,
v=>lsm(v,gt274),
v=>lsm(v,gt275),
nf,
nf,
nf,
nf,
nf,
nf,

nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt277),
nf,
v=>lsm(v,gt276),
nf,
nf,
nf,
v=>lsm(v,gt278),
nf,
nf,
v=>lsm(v,gt277),
nf,
nf,
nf,
nf,

nf,
nf,

nf,
nf,
nf,
nf,
nf,
nf,

nf,
nf,
nf,
nf,
nf,
nf];

function getToken(l, SYM_LU) {
    if (l.END) return 0; /*$eof*/

    switch (l.ty) {
        case 2:
            //*
            if (SYM_LU.has(l.tx)) return 14;
            /*/
                console.log(l.tx, SYM_LU.has(l.tx), SYM_LU.get(l.tx))
                if (SYM_LU.has(l.tx)) return SYM_LU.get(l.tx);
            //*/
            return 2;
        case 1:
            return 1;
        case 4:
            return 3;
        case 256:
            return 9;
        case 8:
            return 4;
        case 512:
            return 10;
        default:
            return SYM_LU.get(l.tx) || SYM_LU.get(l.ty);
    }
}

/************ Parser *************/

function parser(l, e = {}) {

    fn = e.functions;

    l.IWS = false;
    l.PARSE_STRING = true;

    if (symbols.length > 0) {
        symbols.forEach(s => { l.addSymbol(s) });
        l.tl = 0;
        l.next();
    }

    const recovery_chain = [];

    const o = [],
        ss = [0, 0];

    let time = 1000000,
        RECOVERING = 100,
        RESTARTED = true,
        tk = getToken(l, lu),
        p = l.copy(),
        sp = 1,
        len = 0,
        reduceStack = (e.reduceStack = []),
        ROOT = 10000,
        off = 0;

    outer:

        while (time-- > 0) {

            const fn = lsm(tk, state[ss[sp]]) || 0;

            let r,
                gt = -1;

            if (fn == 0) {
                /*Ignore the token*/
                tk = getToken(l.next(), lu);
                continue;
            }

            if (fn > 0) {
                r = state_funct[fn - 1](tk, e, o, l, ss[sp - 1]);
            } else {

                if (tk == 14) {
                    tk = lu.get(l.tx);
                    continue;
                }

                if (l.ty == 8 && l.tl > 1) {
                    // Make sure that special tokens are not getting in the way
                    l.tl = 0;
                    // This will skip the generation of a custom symbol
                    l.next(l, false);

                    if (l.tl == 1)
                        continue;
                }

                if (RECOVERING > 1 && !l.END) {

                    if (tk !== lu.get(l.ty)) {
                        tk = lu.get(l.ty);
                        continue;
                    }

                    if (tk !== 13) {
                        tk = 13;
                        RECOVERING = 1;
                        continue;
                    }
                }

                tk = getToken(l, lu);

                const recovery_token = eh[ss[sp]](tk, e, o, l, p, ss[sp], (lex) => getToken(lex, lu));

                if (RECOVERING > 0 && recovery_token >= 0) {
                    RECOVERING = -1; /* To prevent infinite recursion */
                    tk = recovery_token;
                    l.tl = 0; /*reset current token */
                    continue;
                }
            }

            switch (r & 3) {
                case 0:
                    /* ERROR */

                    if (tk == "$eof")
                        l.throw("Unexpected end of input");

                    l.throw(`Unexpected token [${RECOVERING ? l.next().tx : l.tx}]`);
                    return [null];

                case 1:
                    /* ACCEPT */
                    break outer;

                case 2:

                    /*SHIFT */
                    o.push(l.tx);
                    ss.push(off, r >> 2);
                    sp += 2;
                    l.next();
                    off = l.off;
                    tk = getToken(l, lu);
                    RECOVERING++;
                    break;

                case 3:
                    /* REDUCE */
                    RESTARTED = true;

                    len = (r & 0x3FC) >> 1;

                    ss.length -= len;
                    sp -= len;
                    gt = goto[ss[sp]](r >> 10);

                    if (gt < 0)
                        l.throw("Invalid state reached!");

                    if (reduceStack.length > 0) {
                        let i = reduceStack.length - 1;
                        while (i > -1) {
                            let item = reduceStack[i--];

                            if (item.index == sp) {
                                item.action(output)
                            } else if (item.index > sp) {
                                reduceStack.length--;
                            } else {
                                break;
                            }
                        }
                    }

                    ss.push(off, gt);
                    sp += 2;
                    break;
            }
        }
    return o[0];
}; export default parser;
