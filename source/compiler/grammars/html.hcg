## HYDROCARBON BASE JS ##

@NAME CandleFW Hyper Text Markup Langauge Parser

@EXT html

@SYMBOL </  

@IGNORE θws θnl 

@IMPORT ./string.hcg as string

##############################################################################################
##############################################################################################
#### HTML / ML
##############################################################################################
##############################################################################################
	<> HTML → BODY

	<> BODY → GOAL_TAG
	
	<> IMPORT_TAG → < τimport ATTRIBUTES /? >  				↦cstr ^element_selector

	<> GOAL_TAG → TAG
		│ DTD TAG 											↦return { sym[1] }

	<> DTD → < ! BODY_SYMBOLS(+") >					    	↦return { null }			 	

	<> TAG → < TAGNAME ATTRIBUTES? > TAG_BODY? </ TAGNAME >	↦return { fn.element_selector($$sym2, $$sym3, $$sym5,  env, lex ) }
		│ < TAGNAME ATTRIBUTES? / >							↦return { fn.element_selector($$sym2, $$sym3, null,  env, lex ) }
		│ < VOID_NAME ATTRIBUTES? > </ VOID_NAME > 			↦return { fn.element_selector($$sym2, $$sym3, $$sym4, env, lex ) }
		│ < VOID_NAME ATTRIBUTES? /? >						↦return { fn.element_selector($$sym2, $$sym3, null, env, lex ) }


###########################################################################################
# https://www.w3.org/TR/2011/WD-html-markup-20110113/syntax.html#syntax-elements
###########################################################################################

<> VOID_NAME → τinput
	│ τarea
	│ τbase
	│ τbr
	│ τcol
	│ τcommand
	│ τembed
	│ τhr
	│ τimg
	│ τkeygen
	│ τlink
	│ τmeta
	│ τparam
	│ τsource
	│ τtrack
	│ τwbr

<> TAG_BODY → (TAG_BODY_ITEM)(+)


<> TAG_BODY_ITEM → TEXT_NODE  						
	│ TAG 											
	│ DTD 											
	

<> ATTRIBUTES → ATTRIBUTES ATTRIBUTE  					↦return { sym[0].push(sym[1]), sym[0] }
	│ ATTRIBUTE 										↦return { [sym[0]] }

<> ATTRIBUTE → ATTRIBUTE_HEAD = ATTRIBUTE_BODY 	 		↦cstr ^attribute
 	│ ATTRIBUTE_HEAD 									↦cstr ^attribute

<> ATTRIBUTE_HEAD → ' θid '								↦return { sym[1] }
	│ " θid "											↦return { sym[1] }
	│ θid

<> ATTRIBUTE_BODY → string::normal_string 						
	│ θid 											

<> TAGNAME → θid



<> TEXT_NODE → BODY_SYMBOLS(+") 							↦cstr ^text

<> BODY_SYMBOLS → θid │ θws │ θsym │ θop │ θob │ θcb │ θnum






