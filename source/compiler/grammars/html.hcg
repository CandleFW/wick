## HYDROCARBON BASE JS ##

@NAME CandleFW Hyper Text Markup Langauge Parser

@EXT html

@SYMBOL </ (( )) )( " ' 

@IGNORE θws θnl 

@IMPORT ./string.hcg as string

##############################################################################################
##############################################################################################
#### HTML / ML
##############################################################################################
##############################################################################################
	
	<> HTML → GOAL_TAG
		│ ((IMPORT_TAG))(+) GOAL_TAG 								↦return { sym[1].import_list = sym[0], sym[1]}
	
	<> IMPORT_TAG → < τimport ATTRIBUTES /? >  				↦cstr ^element_selector

	<> GOAL_TAG → TAG
		│ DTD TAG 											↦return { sym[1] }

	<> DTD → < ! BODY_STRING >					    		↦return { null }			 	

	<> TAG → < TAGNAME ATTRIBUTES? > TAG_BODY </ TAGNAME >	↦cstr ^element_selector
		│ < TAGNAME ATTRIBUTES? / >							↦cstr ^element_selector
		│ < VOID_NAME ATTRIBUTES? ></ VOID_NAME > 			↦cstr ^element_selector
		│ < VOID_NAME ATTRIBUTES? /? >						↦cstr ^element_selector


	###########################################################################################
	# https://www.w3.org/TR/2011/WD-html-markup-20110113/syntax.html#syntax-elements
	###########################################################################################

	<> VOID_NAME → τinput
		│ τarea
		│ τbase
		│ τbr
		│ τcol
		│ τcommand
		│ τembed
		│ τhr
		│ τimg
		│ τkeygen
		│ τlink
		│ τmeta
		│ τparam
		│ τsource
		│ τtrack
		│ τwbr
	# Wick Elements #########################################################################
		│ τf
		│ τfilter

	<> TAG_BODY →  TAG_BODY TEXT_NODE  						↦return { sym[0].push(sym[1]), sym[0] }
		│ TAG_BODY TAG  									↦return { sym[0].push(sym[1]), sym[0] }
		│ TAG 												↦return { [sym[0]] }
		│ TEXT_NODE 										↦return { [sym[0]] }
		│ DTD 											 	↦return { null }
		│ ɛ 

	<> ATTRIBUTES → ATTRIBUTES ATTRIBUTE  					↦return { sym[0].push(sym[1]), sym[0] }
		│ ATTRIBUTE 										↦return { [sym[0]] }

	<> ATTRIBUTE → ATTRIBUTE_HEAD = ATTRIBUTE_BODY 	 		↦cstr ^attribute
	 	│ ATTRIBUTE_HEAD 									↦cstr ^attribute

	<> ATTRIBUTE_HEAD → ' θid '								↦return { sym[1] }
		│ " θid "											↦return { sym[1] }
		│ θid

	<> ATTRIBUTE_BODY → string::normal_string 						
		│ θid 											

	<> TAGNAME → θid

	<> TEXT_NODE → BODY_STRING 								↦cstr ^text

	<> BODY_STRING → BODY_STRING BODY_SYMBOLS 				↦return { sym[0] + sym[1] }			
		│ BODY_SYMBOLS 										↦return { sym[0] + "" }

	<> BODY_SYMBOLS → θany │ θws │ θnl






