## HYDROCARBON BASE JS ##

@NAME CandleFW Hyper Text Markup Langauge Parser

@EXT html

@SYMBOL </ <! -- 

@IGNORE θws θnl 

@IMPORT ./string.hcg as string

##############################################################################################
##############################################################################################
#### HTML / ML
##############################################################################################
##############################################################################################
	<> HTML → RESULT

	<> RESULT → DTD(*) BODY  								↦return { $sym2.DTD = $sym1, $sym2 }

	<> BODY → GOAL_TAG

	<> GOAL_TAG → TAG

	<> TAG → < TAGNAME ATTRIBUTES? > TAG_BODY? </ TAGNAME >	↦return { env.fn.element_selector($$sym2, $$sym3, $$sym5,  env, lex ) }
		│ < TAGNAME ATTRIBUTES? / >							↦return { env.fn.element_selector($$sym2, $$sym3, null,  env, lex ) }
		│ < VOID_NAME ATTRIBUTES? > </ VOID_NAME > 			↦return { env.fn.element_selector($$sym2, $$sym3, $$sym4, env, lex ) }
		│ < VOID_NAME ATTRIBUTES? /? >						↦return { env.fn.element_selector($$sym2, $$sym3, null, env, lex ) }
		
	<> DTD → <! --?  (BODY_SYMBOLS)(*")  --? >				↦return { null }			 	


###########################################################################################
# https://www.w3.org/TR/2011/WD-html-markup-20110113/syntax.html#syntax-elements
###########################################################################################

<> VOID_NAME → τinput
	│ τarea
	│ τbase
	│ τbr
	│ τcol
	│ τcommand
	│ τembed
	│ τhr
	│ τimg
	│ τkeygen
	│ τlink
	│ τmeta
	│ τparam
	│ τsource
	│ τtrack
	│ τwbr

<> TAG_BODY → TAG_BODY_ITEM(+)

<> TAG_BODY_ITEM → TEXT_NODE  						
	│ TAG 	
	│ DTD  												↦return { $$sym2 }											
	
<> ATTRIBUTES → ATTRIBUTES ATTRIBUTE  					↦return { $$sym1.push($$sym2), $$sym1 }
	│ ATTRIBUTE 										↦return { [$$sym1] }

<> ATTRIBUTE → ATTRIBUTE_HEAD = ATTRIBUTE_BODY 	 		↦cstr ^attribute
 	│ ATTRIBUTE_HEAD 									↦cstr ^attribute

<> ATTRIBUTE_HEAD → ' identifier? '								↦return { $$sym2 }
	│ " identifier? "											↦return { $$sym2 }
	│ identifier


<> ATTRIBUTE_BODY → string::normal_string 						
	│ identifier
	│ θnum 											

<> TAGNAME → identifier


<> identifier → (θid) ( θid │ \- │ \_ │ \: )(*") (θws │ θnl)?  ↦ r { $sym1 + $sym2 } 


<> TEXT_NODE → BODY_SYMBOLS(+") 							↦cstr ^text

<> BODY_SYMBOLS → θid │ θws │ θsym │ θop │ θob │ θcb │ θnum │ θkeyword │ θany │ \! │ \(





