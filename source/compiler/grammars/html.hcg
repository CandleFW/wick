## HYDROCARBON BASE JS ##

@NAME CandleFW Hyper Text Markup Langauge Parser

@EXT html

@SYMBOL </ (( )) )( " ' 

@IGNORE θws θnl 

<> S → GOAL_TAG

<> GOAL_TAG → TAG 								 	

<> TAG → < TAGNAME ATTRIBUTES > TAG_BODY </ TAGNAME >	 ↦cstr ^wick_html_element

	│ < TAGNAME ATTRIBUTES / >							↦cstr ^wick_html_element

<> TAG_BODY →  TAG_BODY TEXT_NODE  					↦return { sym[0].push(sym[1]), sym[0] }
	│ TAG_BODY TAG  								↦return { sym[0].push(sym[1]), sym[0] }
	│ TAG 											↦return { [sym[0]] }
	│ TEXT_NODE 									↦return { [sym[0]] }
	│ ɛ 

<> ATTRIBUTES → ATTRIBUTES ATTRIBUTE  				↦return { sym[0].push(sym[1]), sym[0] }
	│ ATTRIBUTE 									↦return { [sym[0]] }
	│ ɛ

<> ATTRIBUTE → ATTRIBUTE_HEAD = ATTRIBUTE_BODY 	 	↦cstr ^attribute
 	│ ATTRIBUTE_HEAD 								↦cstr ^attribute

<> ATTRIBUTE_HEAD → ' θid '							↦return { sym[1] }
	│ " θid "										↦return { sym[1] }
	│ θid

<> ATTRIBUTE_BODY → " ATTRIBUTE_DATA " 				↦return { sym[1] }
	│ ' ATTRIBUTE_DATA ' 							↦return { sym[1] }
	│ θid 											
	│ BINDING 									
	│ " BINDING " 									↦return { sym[1] }


<> ATTRIBUTE_DATA → ATTRUBUTE_DATA_VALUE 			↦return { sym[0] + "" }	
	│ ATTRIBUTE_DATA ATTRUBUTE_DATA_VALUE 			↦return { sym[0] + sym[1]}

<> ATTRUBUTE_DATA_VALUE → θid 
	│ θws │ θany

<> TAGNAME → θid

<> TEXT_NODE → BODY_STRING 							↦cstr ^text

<> BODY_STRING → BODY_STRING BODY_SYMBOLS 			↦return { sym[0] + sym[1] }			
	│ BODY_SYMBOLS 									↦return { sym[0] + "" }

<> BODY_SYMBOLS → θid │ θany │ θws │ θnl

<> BINDING → CALL_BINDING  							
	│ BASIC_BINDING

<> BASIC_BINDING → \(( ↦{ env.start = lex.off+2 } BINDING_DATA \))   ↦cstr ^binding
<> CALL_BINDING → \(( ↦{ env.start = lex.off+2 } BINDING_DATA \)( BINDING_DATA \))    ↦cstr ^binding

<> BINDING_DATA → BINDING_DATA BINDING_DATA    ↦return { null }   
	│ θid │ θws │ θnl │ θsym │ θop │ θany  		  

