@NAME CFW Wick Parser

@EXT wick

@SYMBOL (( )) )(

@IGNORE θws θnl

@IMPORT ./js.hcg as js
@IMPORT ./html.hcg as html
@IMPORT ../../../node_modules/@candlefw/css/source/grammar/css.hcg as css 

<> S → start																		↦r{ sym[0] }

<> start → js::javascript 
	│ html::HTML
	│ css::CSS

+> js::statement → html::HTML ;  	  												↦r {sym[0]}

+> html::ATTRIBUTE_BODY → WICK_BINDING 									
	│ " WICK_BINDING " 																↦return { sym[1] }

+> html::TEXT_NODE → WICK_BINDING 													↦cstr ^text

+> html::TAG →  < τstyle html::ATTRIBUTES > css::CSS </ τstyle > 					↦cstr ^element_selector
	│ < τscript html::ATTRIBUTES > js::javascript </ τscript > 							↦cstr ^element_selector

<> WICK_BINDING → CALL_BINDING  							
	│ BASIC_BINDING

<> BASIC_BINDING → \(( ↦{ env.start = lex.off+2 } js::expression \))   					↦cstr ^wick_binding
<> CALL_BINDING → \(( ↦{ env.start = lex.off+2 } js::expression )( js::expression \))    	↦cstr ^wick_binding
