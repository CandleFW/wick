@NAME CandleFW Markdown Parser

@EXT md


@IGNORE θws  θnl
@IMPORT ./html.hcg as html

<> MD → MARKDOWN_BLOCKS

<> MARKDOWN_BLOCKS → HEADER 
   #│ BLOCK_QUOTES
   # │ CODE_BLOCK
   │ UNORDERED_LIST_ITEMS
   │ EMPHASIS
   │ LINK


<> HEADER → \#(+) MD_INLINE_ELEMENTS θnl							↦r { fn.element_selector("h" + $sym1.length, null, $$sym2,  env, lex ) }

	
<> MD_INLINE_ELEMENTS → MD_INLINE_ELEMENT(+)						

<> MD_INLINE_ELEMENT → html::TAG
	│ html::TEXT_NODE
	│ EMPHASIS
	│ LINK
	│ CODE_QUOTE

<> BLOCK_QUOTES → BLOCK_QUOTE_LINE(+) 

<> BLOCK_QUOTE_LINE → \> MD_INLINE_ELEMENTS θnl

<> UNORDERED_LIST_ITEMS → UNORDERED_LIST_ITEM(+)											↦r {fn.create_ordered_list($$sym1, 0, -1, env, lex)}

<> UNORDERED_LIST_ITEM → ( \+ │ \- │ \* ) code_sentinel? MD_INLINE_ELEMENTS θnl   ↦r { {lvl:$$sym2, li:fn.element_selector("li", null,  $$sym3, env, lex)} }

<> CODE_BLOCK → \` \` \` θid? ( θnl html::TEXT_NODE ↦r{fn.element_selector("pre", null,  [$$sym2], env, lex)} )(*) θnl \` \` \` θnl ↦r { fn.element_selector("pre", null,  $$sym5, env, lex) }

<> LINK → \[ html::TEXT_NODE \]\( html::TEXT_NODE \)

<> EMPHASIS → \* MD_INLINE_ELEMENTS \*								↦r { fn.element_selector("b", null,  $$sym2, env, lex) }

<> CODE_QUOTE → `` html::TEXT_NODE  `` 								↦r { fn.element_selector("code", null,  $$sym3, env, lex) }

<> code_sentinel → \* \* \* \* ↦r {console.log("ASDASDASDASD")}



