let fn = {}; const 
/************** Maps **************/

    /* Symbols To Inject into the Lexer */
    symbols = ["</","```","``","===","](","||","^=","$=","*=","<=",">=","...","<",">","==","!=","!==","**","++","--","<<",">>",">>>","&&","+=","-=","%=","/=","**=","<<=",">>=",">>>=","&=","|=","=>","//","/*"],

    /* Goto lookup maps */
    gt0 = [0,-1,1,6,4,-1,7,-314,2,3,5,9],
gt1 = [0,-2,11,-2,7,-316,10,9],
gt2 = [0,-324,14,-7,13,16,-2,15],
gt3 = [0,-328,36,39,40,-2,16,-2,43],
gt4 = [0,-328,44,39,40,-2,16,-2,43],
gt5 = [0,-328,47,39,40,-2,16,-2,43],
gt6 = [0,-334,51,50],
gt7 = [0,-329,58,40,-2,16,-2,43],
gt8 = [0,-4,60],
gt9 = [0,-333,16,-2,63],
gt10 = [0,-333,16,-2,65],
gt11 = [0,-6,73,-2,76,-18,78,-3,80,-1,81,-1,85,-1,86,82,-283,75,-1,71,69,72,-9,79,74,88],
gt12 = [0,-334,101],
gt13 = [0,-4,103],
gt14 = [0,-4,104],
gt15 = [0,-331,106,-1,16,-2,108,-3,107],
gt16 = [0,-6,73,-2,76,-18,78,-3,80,-1,81,-1,85,-1,86,82,-283,75,-1,71,113,72,-9,79,74,88],
gt17 = [0,-332,117,16,-2,15],
gt18 = [0,-6,73,-2,76,-18,78,-3,80,-1,81,-1,85,-1,86,82,-283,75,-3,118,-9,79,74,88],
gt19 = [0,-10,119,-2,122,139,138,128,127,-1,123,131,130,-1,124,135,134,-1,126,78,-2,125,80,-1,81,-1,85,-1,86,82,-283,121,-13,79,120,88],
gt20 = [0,-7,142,141],
gt21 = [0,-339,144],
gt22 = [0,-331,145,-1,16,-2,108,-3,107],
gt23 = [0,-28,78,-3,80,-1,81,-1,85,147,86,82,-297,79,148,88],
gt24 = [0,-42,150,149,151],
gt25 = [0,-324,162],
gt26 = [0,-4,163],
gt27 = [0,-341,167,166,165,168],
gt28 = [0,-341,167,166,176,168],
gt29 = [0,-332,178,16,-2,15],
gt30 = [0,-332,179,16,-2,15],
gt31 = [0,-11,183,-4,182,-1,181,-9,78,-3,80,-1,81,-1,85,-1,86,82,-283,185,-13,79,184,88],
gt32 = [0,-11,189,188,-3,128,127,-1,190,187,-5,186,-1,78,-3,80,-1,81,-1,85,-1,86,82,-283,185,-13,79,184,88],
gt33 = [0,-11,189,188,-3,128,127,-1,190,-4,194,-1,193,-1,78,-3,80,-1,81,-1,85,-1,86,82,-283,185,-13,79,184,88],
gt34 = [0,-11,195,-16,78,-3,80,-1,81,-1,85,-1,86,82,-283,185,-13,79,184,88],
gt35 = [0,-7,197],
gt36 = [0,-28,78,-3,80,-1,81,-1,85,200,86,82,-297,79,148,88],
gt37 = [0,-28,78,-3,80,-1,81,-1,85,-1,86,82,-297,79,202,88],
gt38 = [0,-44,204],
gt39 = [0,-324,205],
gt40 = [0,-341,208,-2,168],
gt41 = [0,-332,210,16,-2,15],
gt42 = [0,-11,213,-16,78,-3,80,-1,81,-1,85,-1,86,82,-283,185,-13,79,184,88],
gt43 = [0,-11,189,214,-3,128,127,-1,190,-8,78,-3,80,-1,81,-1,85,-1,86,82,-283,185,-13,79,184,88],
gt44 = [0,-28,78,217,216,-1,80,-1,81,-1,85,-1,86,82,-297,79,219,88],
gt45 = [0,-11,220,-16,78,-3,80,-1,81,-1,85,-1,86,82,-283,185,-13,79,184,88],
gt46 = [0,-28,78,-3,80,-1,81,-1,85,221,86,82,-297,79,148,88],
gt47 = [0,-28,78,217,225,-1,80,-1,81,-1,85,-1,86,82,-297,79,219,88],
gt48 = [0,-28,78,227,-2,80,-1,81,-1,85,-1,86,82,-297,79,219,88],
gt49 = [0,-28,78,-3,80,-1,81,-1,85,-1,86,82,-297,79,228,88],

    // State action lookup maps
    sm0=[0,-4,0,-4,0,-8,1],
sm1=[0,2,-3,0,-4,0],
sm2=[0,3,-3,0,-4,0],
sm3=[0,4,-3,0,-4,0,-4,-1],
sm4=[0,5,-3,0,-4,0,-4,-1],
sm5=[0,-4,0,-4,0,-8,6],
sm6=[0,-4,0,-4,0,-8,7],
sm7=[0,-2,8,-1,0,-4,0,-6,9,-145,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],
sm8=[0,28,-3,0,-4,0,-4,-1],
sm9=[0,29,-3,0,-4,0],
sm10=[0,-4,0,-4,0,-8,30],
sm11=[0,-2,8,-1,0,-4,0,-9,31,-4,32,-130,33,34],
sm12=[0,-2,8,-1,0,-4,0,-4,-1,-4,35,-4,36,-130,33,34],
sm13=[0,-2,8,-1,0,-4,0,-4,-1,-4,37,-4,38,-130,33,34],
sm14=[0,-2,39,-1,0,-4,0,-4,-1,-4,39,-4,39,-130,39,39],
sm15=[0,-2,40,-1,0,-4,0,-4,-1,-4,41,-2,42,-1,41,-5,41,-31,41,-22,43,-61,44,-7,41,41],
sm16=[0,-2,45,-1,0,-4,0,-4,-1,-4,45,-2,45,-1,45,-5,45,-31,45,-22,45,-61,45,-7,45,45],
sm17=[0,-2,46,-1,0,-4,0,-9,46,-4,46,-130,46,46],
sm18=[0,-2,46,-1,0,-4,0,-4,-1,-4,46,-4,46,-130,46,46],
sm19=[0,-2,8,-1,0,-4,0,-9,47,-4,48,-130,33,34],
sm20=[0,-4,0,-4,0,-14,49],
sm21=[0,-4,0,-4,0,-5,50,-2,51],
sm22=[0,-2,52,-1,0,-4,0,-4,-1,-4,52,-4,52,-130,52,52],
sm23=[0,-2,53,-1,0,-4,0,-4,-1,-4,53,-4,53,-37,54,-92,53,53],
sm24=[0,-2,8,-1,0,-4,0,-4,-1,-141,55],
sm25=[0,-2,8,-1,0,-4,0,-4,-1,-140,56],
sm26=[0,-2,57,-1,0,-4,0,-4,-1,-4,57,-4,57,-37,57,-92,57,57],
sm27=[0,-2,8,-1,0,-4,0,-4,-1,-4,58,-4,59,-130,33,34],
sm28=[0,-1,60,61,-1,0,62,63,64,65,66,-4,-1,67,-2,68,-10,69,-4,70,-7,71],
sm29=[0,-4,0,-4,0,-4,-1,-9,72],
sm30=[0,-2,8,-1,0,-4,0,-4,-1,-4,73,-4,74,-130,33,34],
sm31=[0,75,75,75,-1,0,75,75,75,75,75,-4,-1,76,-2,75,-4,75,-5,75,-1,75,-2,75,-7,75],
sm32=[0,-4,0,-4,0,-4,-1,-9,77],
sm33=[0,-2,40,-1,0,-4,0,-4,-1,-4,78,-2,42,-1,78,-5,78,-31,78,-22,43,-61,44,-7,78,78],
sm34=[0,-2,79,-1,0,-4,0,-4,-1,-4,79,-2,79,-1,79,-5,79,-31,79,-22,79,-61,79,-7,79,79],
sm35=[0,-2,80,-1,0,-4,0,-4,-1,-4,80,-2,80,-1,80,-5,80,-31,80,-22,80,-61,80,-7,80,80],
sm36=[0,-4,0,-4,0,-14,81],
sm37=[0,-4,0,-4,0,-5,50,-2,82],
sm38=[0,-2,83,-1,0,-4,0,-4,-1,-4,83,-4,83,-130,83,83],
sm39=[0,-4,0,-4,0,-5,50,-2,84],
sm40=[0,-4,0,-4,0,-8,84],
sm41=[0,-4,0,-4,0,-6,85],
sm42=[0,-2,8,-1,0,-4,0,-4,-1,-140,86,87],
sm43=[0,-4,0,-4,0,-4,-1,-141,88],
sm44=[0,-2,89,-1,0,-4,0,-4,-1,-4,89,-4,89,-37,89,-92,89,89],
sm45=[0,-4,0,-4,0,-4,-1,-140,90],
sm46=[0,-1,60,61,-1,0,62,63,64,65,66,-4,-1,91,-2,68,-10,69,-4,70,-7,71],
sm47=[0,-4,0,-4,0,-4,-1,-9,92],
sm48=[0,-4,0,-4,0,-4,-1,93],
sm49=[0,-2,8,-1,0,-4,0,-4,-1],
sm50=[0,-1,60,61,-1,0,62,63,64,65,66,-4,-1,94,-2,68,-10,69,-4,70,-7,71],
sm51=[0,-1,95,95,-1,0,95,95,95,95,95,-4,-1,95,-2,95,-10,95,-4,95,-7,95],
sm52=[0,-1,96,96,-1,0,96,96,96,96,96,-4,-1,96,-2,96,-10,96,-4,96,-7,96],
sm53=[0,-1,60,61,-1,0,62,63,64,65,97,-4,-1,97,-2,68,-3,98,99,100,-2,101,-1,69,-4,70,-7,71,-27,102,-2,103],
sm54=[0,-1,104,104,-1,105,104,104,104,104,104,-4,-1,104,-2,104,-3,104,104,104,-2,104,-1,104,-4,104,-7,104,-27,104,-2,104],
sm55=[0,-1,106,106,-1,0,106,106,106,106,106,-4,-1,106,-2,106,-4,106,-3,106,-1,106,-1,106,-2,106,-7,106,-1,106],
sm56=[0,-1,60,61,-1,0,62,63,64,65,107,-4,-1,107,-2,107,-4,107,-3,107,-1,107,-1,107,-2,107,-7,107,-1,107],
sm57=[0,-1,108,108,-1,0,108,108,108,108,108,-4,-1,108,-2,108,-4,108,-3,108,-1,108,-1,108,-2,108,-7,108,-1,108],
sm58=[0,-1,60,61,-1,0,62,63,64,65,0,-4,-1,-14,69,-4,70,-7,109],
sm59=[0,-1,110,110,-1,0,110,110,110,110,110,-4,-1,110,-2,110,-4,110,-3,110,-1,110,-1,110,-2,110,-7,110,-1,110],
sm60=[0,-1,111,111,-1,0,111,111,111,111,111,-4,-1,111,-2,111,-4,111,-3,111,-1,111,-1,111,-2,111,-7,111,-1,111],
sm61=[0,-1,112,113,114,0,115,116,117,118,0,-4,-1,-8,119],
sm62=[0,-1,120,120,-1,0,120,120,120,120,120,-4,-1,120,-2,120,-4,120,-3,120,-1,120,-1,120,-2,120,-7,120,-1,120],
sm63=[0,-1,121,121,-1,0,121,121,121,121,121,-4,-1,121,-2,121,-4,121,-3,121,-1,121,-1,121,-2,121,-7,121,-1,121],
sm64=[0,-2,8,-1,0,-4,0,-4,-1,-147,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],
sm65=[0,122,122,122,-1,0,122,122,122,122,122,-4,-1,122,-2,122,-4,122,-5,122,-1,122,-2,122,-7,122],
sm66=[0,123,123,123,-1,0,123,123,123,123,123,-4,-1,124,-2,123,-4,123,-5,123,-1,123,-2,123,-7,123],
sm67=[0,-4,0,-4,0,-4,-1,-9,125],
sm68=[0,-4,0,-4,0,-4,-1,-147,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],
sm69=[0,-2,126,-1,0,-4,0,-4,-1,-4,126,-2,126,-1,126,-5,126,-31,126,-22,126,-61,126,-7,126,126],
sm70=[0,-4,0,-4,0,-5,50,-2,127],
sm71=[0,-4,0,-4,0,-8,127],
sm72=[0,-4,0,-4,0,-8,128],
sm73=[0,-4,0,-4,0,-14,129],
sm74=[0,-2,130,-1,0,-4,0,-4,-1,-4,130,-4,130,-130,130,130],
sm75=[0,-2,131,-1,0,-4,0,-4,-1,-4,131,-4,131,-5,131,-124,131,131],
sm76=[0,-2,132,-1,133,134,135,136,137,0,-3,138,-1],
sm77=[0,-2,139,-1,0,-4,0,-4,-1,-4,139,-4,139,-37,139,-92,139,139],
sm78=[0,-4,0,-4,0,-4,-1,140],
sm79=[0,141,141,141,-1,0,141,141,141,141,141,-4,-1,141,-2,141,-4,141,-5,141,-1,141,-2,141,-7,141],
sm80=[0,-4,0,-4,0,-4,-1,-9,142],
sm81=[0,-1,143,143,-1,0,143,143,143,143,143,-4,-1,143,-2,143,-10,143,-4,143,-7,143],
sm82=[0,-1,144,144,-1,0,144,144,144,144,144,-4,-1,144,-2,144,-10,144,-4,144,-7,144],
sm83=[0,-1,145,145,-1,0,145,145,145,145,145,-4,-1,145,-2,145,-10,145,-4,145,-7,145],
sm84=[0,-1,60,61,-1,0,62,63,64,65,0,-4,-1,-3,68,-4,99,-5,69,-4,70,-7,71],
sm85=[0,-1,146,146,-1,0,146,146,146,146,0,-4,-1,-3,146,-4,146,-5,146,-4,146,-7,146],
sm86=[0,-1,147,147,-1,0,147,147,147,147,0,-4,-1,-3,147,-4,147,-5,147,-4,147,-7,147],
sm87=[0,-1,60,61,-1,0,62,63,64,65,0,-4,-1,-3,68,-4,99,100,-4,69,-4,70,-7,71],
sm88=[0,-1,148,148,-1,0,148,148,148,148,0,-4,-1,-3,148,-4,148,148,-4,148,-4,148,-7,148],
sm89=[0,-1,149,149,-1,0,149,149,149,149,0,-4,-1,-3,149,-4,149,149,-4,149,-4,149,-7,149],
sm90=[0,-2,150,-1,0,-4,151,-4,-1],
sm91=[0,-1,60,61,-1,0,62,63,64,65,0,-4,-1,-3,68,-4,99,-5,69,-4,70,-7,71,-27,102,-2,103],
sm92=[0,-1,152,152,-1,0,152,152,152,152,0,-4,-1,-3,152,-4,152,-5,152,-4,152,-7,152,-27,152,-2,152],
sm93=[0,-1,153,153,-1,0,153,153,153,153,0,-4,-1,-3,153,-4,153,-5,153,-4,153,-7,153,-27,153,-2,153],
sm94=[0,-1,60,61,-1,0,62,63,64,65,154,-4,-1,154,-2,68,-10,69,-4,70,-7,71],
sm95=[0,-1,155,155,-1,0,155,155,155,155,155,-4,-1,155,-2,155,-3,156,-6,155,-4,155,-7,155],
sm96=[0,-1,157,157,-1,0,157,157,157,157,157,-4,-1,157,-2,157,-3,157,-6,157,-4,157,-7,157],
sm97=[0,-1,158,158,-1,105,158,158,158,158,158,-4,-1,158,-2,158,-3,158,158,158,-2,158,-1,158,-4,158,-7,158,-27,158,-2,158],
sm98=[0,-1,159,159,-1,159,159,159,159,159,159,-4,-1,159,-2,159,-3,159,159,159,-2,159,-1,159,-4,159,-7,159,-27,159,-2,159],
sm99=[0,-1,160,160,-1,160,160,160,160,160,160,-4,-1,160,-2,160,-3,160,160,160,-2,160,-1,160,-4,160,-7,160,-27,160,-2,160],
sm100=[0,-1,161,161,-1,0,161,161,161,161,161,-4,-1,161,-2,161,-4,161,-3,161,-1,161,-1,161,-2,161,-7,161,-1,161],
sm101=[0,-4,0,-4,0,-4,-1,-15,162],
sm102=[0,-1,60,61,-1,0,62,63,64,65,0,-4,-1,-14,69,-4,70,-7,163],
sm103=[0,-1,60,61,-1,0,62,63,64,65,0,-4,-1,-14,69,-4,70,-7,71,-1,164],
sm104=[0,-1,165,165,-1,0,165,165,165,165,0,-4,-1,-14,165,-4,165,-7,165,-1,165],
sm105=[0,-4,0,-4,0,-4,-1,-19,166],
sm106=[0,-1,112,113,114,0,115,116,117,118,0,-4,-1,-8,119,-10,167],
sm107=[0,-1,168,168,168,0,168,168,168,168,0,-4,-1,-8,168,-10,168],
sm108=[0,-1,169,169,169,0,169,169,169,169,0,-4,-1,-8,169,-10,169],
sm109=[0,-4,0,-4,0,-4,-1,-9,170],
sm110=[0,-4,0,-4,0,-8,171],
sm111=[0,-4,0,-4,0,-8,172],
sm112=[0,-4,0,-4,0,-4,-1,-140,173],
sm113=[0,-2,132,-1,133,134,135,136,137,0,-3,138,-1,-140,174,174],
sm114=[0,-2,175,-1,175,175,175,175,175,0,-3,175,-1,-140,175,175],
sm115=[0,-2,176,-1,176,176,176,176,176,0,-3,176,-1,-140,176,176],
sm116=[0,-2,177,-1,177,177,177,177,177,0,-3,177,-1,-140,177,177],
sm117=[0,-4,0,-4,0,-4,-1,-141,178],
sm118=[0,-4,0,-4,0,-4,-1,-9,179],
sm119=[0,-4,0,-4,0,-4,-1,-9,180],
sm120=[0,181,181,181,-1,0,181,181,181,181,181,-4,-1,181,-2,181,-4,181,-5,181,-1,181,-2,181,-7,181],
sm121=[0,-1,60,61,-1,0,62,63,64,65,182,-4,-1,182,-2,68,-4,182,-5,69,-4,70,-7,71],
sm122=[0,-1,183,183,-1,0,183,183,183,183,0,-4,-1,-3,183,-4,183,-5,183,-4,183,-7,183],
sm123=[0,-1,184,184,-1,0,184,184,184,184,184,-4,-1,184,-2,184,-4,184,-5,184,-4,184,-7,184],
sm124=[0,-1,185,185,-1,0,185,185,185,185,185,-4,-1,185,-2,185,-4,185,-5,185,-1,185,-2,185,-7,185],
sm125=[0,-1,60,61,-1,0,62,63,64,65,186,-4,-1,186,-2,68,-4,99,-5,69,-4,70,-7,71],
sm126=[0,-1,187,187,-1,0,187,187,187,187,0,-4,-1,-3,187,-4,187,187,-4,187,-4,187,-7,187],
sm127=[0,-1,188,188,-1,0,188,188,188,188,188,-4,-1,188,-2,188,-4,188,-5,188,-4,188,-7,188],
sm128=[0,-1,189,189,-1,0,189,189,189,189,189,-4,-1,189,-2,189,-4,189,-5,189,-4,189,-7,189],
sm129=[0,-4,0,-4,190,-4,-1],
sm130=[0,-1,60,61,-1,0,62,63,64,65,191,-4,-1,-14,69,-4,70,-7,71],
sm131=[0,-1,60,61,-1,0,62,63,64,65,192,-4,-1,192,-2,68,-4,99,-5,69,-4,70,-7,71],
sm132=[0,-1,193,193,-1,0,193,193,193,193,0,-4,-1,-3,193,-4,193,-5,193,-4,193,-7,193,-27,193,-2,193],
sm133=[0,-1,194,194,-1,0,194,194,194,194,194,-4,-1,194,-2,194,-10,194,-4,194,-7,194],
sm134=[0,-1,195,195,-1,0,195,195,195,195,195,-4,-1,195,-2,195,-3,195,-6,195,-4,195,-7,195],
sm135=[0,-1,196,196,-1,196,196,196,196,196,196,-4,-1,196,-2,196,-3,196,196,196,-2,196,-1,196,-4,196,-7,196,-27,196,-2,196],
sm136=[0,-1,60,61,-1,0,62,63,64,65,0,-4,-1,-3,68,-10,69,-4,70,-7,71],
sm137=[0,-1,60,61,-1,0,62,63,64,65,0,-4,-1,-14,69,-4,70,-7,71,-1,197],
sm138=[0,-1,198,198,-1,0,198,198,198,198,198,-4,-1,198,-2,198,-4,198,-3,198,-1,198,-1,198,-2,198,-7,198,-1,198],
sm139=[0,-1,199,199,-1,0,199,199,199,199,0,-4,-1,-14,199,-4,199,-7,199,-1,199],
sm140=[0,-1,200,200,-1,0,200,200,200,200,200,-4,-1,200,-2,200,-4,200,-3,200,-1,200,-1,200,-2,200,-7,200,-1,200],
sm141=[0,-1,201,201,201,0,201,201,201,201,0,-4,-1,-8,201,-10,201],
sm142=[0,-4,0,-4,0,-4,-1,-9,202],
sm143=[0,203,203,203,-1,0,203,203,203,203,203,-4,-1,203,-2,203,-4,203,-5,203,-1,203,-2,203,-7,203],
sm144=[0,-2,204,-1,0,-4,0,-4,-1,-4,204,-4,204,-5,204,-124,204,204],
sm145=[0,-2,205,-1,205,205,205,205,205,0,-3,205,-1,-140,205,205],
sm146=[0,-4,0,-4,0,-4,-1,-9,206],
sm147=[0,207,207,207,-1,0,207,207,207,207,207,-4,-1,207,-2,207,-4,207,-5,207,-1,207,-2,207,-7,207],
sm148=[0,208,208,208,-1,0,208,208,208,208,208,-4,-1,208,-2,208,-4,208,-5,208,-1,208,-2,208,-7,208],
sm149=[0,-1,209,209,-1,0,209,209,209,209,209,-4,-1,209,-2,209,-4,209,-5,209,-4,209,-7,209],
sm150=[0,-1,210,210,-1,0,210,210,210,210,210,-4,-1,210,-2,210,-4,210,-5,210,-4,210,-7,210],
sm151=[0,-1,60,61,-1,0,62,63,64,65,191,-4,-1,-12,211,-1,69,-4,70,-7,71],
sm152=[0,-1,212,212,-1,0,212,212,212,212,212,-4,-1,-12,212,-1,212,-4,212,-7,212],
sm153=[0,-1,60,61,-1,0,62,63,64,65,0,-4,-1,-14,69,-4,70,-7,71],
sm154=[0,-1,213,213,-1,0,213,213,213,213,213,-4,-1,-12,213,-1,213,-4,213,-7,213],
sm155=[0,-4,0,-4,0,-4,-1,-16,214],
sm156=[0,-1,60,61,-1,0,62,63,64,65,0,-4,-1,-14,69,-4,70,-7,71,-1,215],
sm157=[0,-1,198,198,-1,0,198,198,198,198,0,-4,-1,-14,198,-4,198,-7,198,-1,216],
sm158=[0,217,217,217,-1,0,217,217,217,217,217,-4,-1,217,-2,217,-4,217,-5,217,-1,217,-2,217,-7,217],
sm159=[0,218,218,218,-1,0,218,218,218,218,218,-4,-1,218,-2,218,-4,218,-5,218,-1,218,-2,218,-7,218],
sm160=[0,-1,60,61,-1,0,62,63,64,65,191,-4,-1,-12,219,-1,69,-4,70,-7,71],
sm161=[0,-1,220,220,-1,0,220,220,220,220,220,-4,-1,220,-2,220,-10,220,-4,220,-7,220],
sm162=[0,-1,221,221,-1,0,221,221,221,221,221,-4,-1,-12,221,-1,221,-4,221,-7,221],
sm163=[0,-1,222,222,-1,0,222,222,222,222,222,-4,-1,-12,222,-1,222,-4,222,-7,222],
sm164=[0,-1,223,223,-1,0,223,223,223,223,223,-4,-1,223,-2,223,-4,223,-3,223,-1,223,-1,223,-2,223,-7,223,-1,223],
sm165=[0,-1,198,198,-1,0,198,198,198,198,0,-4,-1,-14,198,-4,198,-7,198,-1,224],
sm166=[0,-1,225,225,-1,0,225,225,225,225,225,-4,-1,225,-2,225,-4,225,-3,225,-1,225,-1,225,-2,225,-7,225,-1,225],
sm167=[0,-1,226,226,-1,0,226,226,226,226,226,-4,-1,226,-2,226,-10,226,-4,226,-7,226],
sm168=[0,-1,225,225,-1,0,225,225,225,225,0,-4,-1,-14,225,-4,225,-7,225,-1,227],
sm169=[0,-1,228,228,-1,0,228,228,228,228,228,-4,-1,228,-2,228,-4,228,-3,228,-1,228,-1,228,-2,228,-7,228,-1,228],

    // Symbol Lookup map
    lu = new Map([[1,1],[2,2],[4,3],[8,4],[16,5],[32,6],[64,7],[128,8],[256,9],[512,10],[3,11],[264,11],[200,13],[201,14],["</",15],["import",16],[">",24],["<",18],["/",19],[null,14],["_",22],["#",23],["+",70],["*",73],["```",27],["[",29],["](",30],[")",31],["{",42],["}",44],["``",34],[",",41],[";",82],["supports",45],["(",46],["@",47],["keyframes",48],["id",49],["from",50],["to",51],["and",52],["or",53],["not",54],["media",56],["only",57],[":",85],["<=",60],[">=",61],["=",62],["%",63],["px",64],["in",65],["rad",66],["url",67],["\"",155],["'",156],["~",71],["||",72],["|",74],[".",75],["]",76],["^=",77],["$=",78],["*=",79],["i",80],["s",81],["!",152],["important",84],["-",147],["as",87],["export",88],["default",89],["if",91],["else",92],["var",93],["do",94],["while",95],["for",96],["await",97],["of",98],["continue",99],["break",100],["return",101],["throw",102],["with",103],["switch",104],["case",105],["try",106],["catch",107],["finally",108],["debugger",109],["let",110],["const",111],["function",112],["=>",113],["async",114],["class",115],["extends",116],["static",117],["get",118],["set",119],["new",120],["super",121],["target",122],["...",123],["this",124],["/=",125],["%=",126],["+=",127],["-=",128],["<<=",129],[">>=",130],[">>>=",131],["&=",132],["|=",133],["**=",134],["?",135],["&&",136],["^",137],["&",138],["==",139],["!=",140],["===",141],["!==",142],["instanceof",143],["<<",144],[">>",145],[">>>",146],["**",148],["delete",149],["void",150],["typeof",151],["++",153],["--",154],["null",157],["true",158],["false",159],["$",160],["f",162],["filter",163],["input",164],["area",165],["base",166],["br",167],["col",168],["command",169],["embed",170],["hr",171],["img",172],["keygen",173],["link",174],["meta",175],["param",176],["source",177],["track",178],["wbr",179]]),

    //Reverse Symbol Lookup map
    rlu = new Map([[1,1],[2,2],[3,4],[4,8],[5,16],[6,32],[7,64],[8,128],[9,256],[10,512],[11,3],[11,264],[13,200],[14,201],[15,"</"],[16,"import"],[24,">"],[18,"<"],[19,"/"],[14,null],[22,"_"],[23,"#"],[70,"+"],[73,"*"],[27,"```"],[29,"["],[30,"]("],[31,")"],[42,"{"],[44,"}"],[34,"``"],[41,","],[82,";"],[45,"supports"],[46,"("],[47,"@"],[48,"keyframes"],[49,"id"],[50,"from"],[51,"to"],[52,"and"],[53,"or"],[54,"not"],[56,"media"],[57,"only"],[85,":"],[60,"<="],[61,">="],[62,"="],[63,"%"],[64,"px"],[65,"in"],[66,"rad"],[67,"url"],[155,"\""],[156,"'"],[71,"~"],[72,"||"],[74,"|"],[75,"."],[76,"]"],[77,"^="],[78,"$="],[79,"*="],[80,"i"],[81,"s"],[152,"!"],[84,"important"],[147,"-"],[87,"as"],[88,"export"],[89,"default"],[91,"if"],[92,"else"],[93,"var"],[94,"do"],[95,"while"],[96,"for"],[97,"await"],[98,"of"],[99,"continue"],[100,"break"],[101,"return"],[102,"throw"],[103,"with"],[104,"switch"],[105,"case"],[106,"try"],[107,"catch"],[108,"finally"],[109,"debugger"],[110,"let"],[111,"const"],[112,"function"],[113,"=>"],[114,"async"],[115,"class"],[116,"extends"],[117,"static"],[118,"get"],[119,"set"],[120,"new"],[121,"super"],[122,"target"],[123,"..."],[124,"this"],[125,"/="],[126,"%="],[127,"+="],[128,"-="],[129,"<<="],[130,">>="],[131,">>>="],[132,"&="],[133,"|="],[134,"**="],[135,"?"],[136,"&&"],[137,"^"],[138,"&"],[139,"=="],[140,"!="],[141,"==="],[142,"!=="],[143,"instanceof"],[144,"<<"],[145,">>"],[146,">>>"],[148,"**"],[149,"delete"],[150,"void"],[151,"typeof"],[153,"++"],[154,"--"],[157,"null"],[158,"true"],[159,"false"],[160,"$"],[162,"f"],[163,"filter"],[164,"input"],[165,"area"],[166,"base"],[167,"br"],[168,"col"],[169,"command"],[170,"embed"],[171,"hr"],[172,"img"],[173,"keygen"],[174,"link"],[175,"meta"],[176,"param"],[177,"source"],[178,"track"],[179,"wbr"]]),

    // States 
    state = [sm0,
sm1,
sm2,
sm3,
sm0,
sm4,
sm5,
sm6,
sm7,
sm8,
sm9,
sm10,
sm11,
sm12,
sm13,
sm14,
sm15,
sm16,
sm17,
sm17,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm18,
sm19,
sm20,
sm21,
sm22,
sm23,
sm24,
sm25,
sm26,
sm27,
sm28,
sm29,
sm30,
sm31,
sm32,
sm33,
sm34,
sm35,
sm35,
sm35,
sm35,
sm36,
sm37,
sm38,
sm39,
sm40,
sm41,
sm42,
sm43,
sm44,
sm45,
sm44,
sm46,
sm47,
sm48,
sm49,
sm50,
sm51,
sm52,
sm52,
sm52,
sm53,
sm54,
sm55,
sm56,
sm57,
sm57,
sm57,
sm42,
sm58,
sm59,
sm60,
sm61,
sm62,
sm63,
sm63,
sm63,
sm63,
sm63,
sm63,
sm64,
sm65,
sm66,
sm67,
sm68,
sm65,
sm69,
sm70,
sm71,
sm72,
sm73,
sm74,
sm75,
sm75,
sm76,
sm76,
sm77,
sm77,
sm78,
sm49,
sm79,
sm49,
sm80,
sm81,
sm82,
sm82,
sm82,
sm82,
sm83,
sm83,
sm83,
sm83,
sm84,
sm85,
sm86,
sm87,
sm88,
sm89,
sm90,
sm91,
sm92,
sm93,
sm93,
sm94,
sm95,
sm96,
sm97,
sm98,
sm99,
sm100,
sm101,
sm102,
sm103,
sm104,
sm105,
sm106,
sm107,
sm108,
sm108,
sm108,
sm108,
sm108,
sm108,
sm108,
sm108,
sm68,
sm79,
sm109,
sm110,
sm111,
sm112,
sm113,
sm114,
sm115,
sm116,
sm116,
sm116,
sm116,
sm116,
sm116,
sm116,
sm117,
sm49,
sm118,
sm119,
sm120,
sm121,
sm122,
sm123,
sm124,
sm124,
sm125,
sm126,
sm127,
sm128,
sm128,
sm129,
sm130,
sm131,
sm132,
sm133,
sm134,
sm135,
sm136,
sm102,
sm137,
sm138,
sm139,
sm140,
sm141,
sm142,
sm143,
sm144,
sm145,
sm144,
sm146,
sm147,
sm148,
sm149,
sm150,
sm130,
sm151,
sm152,
sm153,
sm154,
sm155,
sm156,
sm157,
sm158,
sm159,
sm160,
sm161,
sm162,
sm163,
sm164,
sm165,
sm166,
sm167,
sm168,
sm169],

/************ Functions *************/

    max = Math.max, min = Math.min,

    //Error Functions
    e = (...d)=>fn.defaultError(...d), 
    eh = [e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e,
e],

    //Empty Function
    nf = ()=>-1, 

    //Environment Functions
    
redv = (ret, fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        const slice = o.slice(-plen);        o.length = ln + 1;        o[ln] = fn(slice, e, l, s, o, plen);        return ret;    },
rednv = (ret, Fn, plen, ln, t, e, o, l, s) => {        ln = max(o.length - plen, 0);        const slice = o.slice(-plen);        o.length = ln + 1;        o[ln] = new Fn(slice, e, l, s, o, plen);        return ret;    },
redn = (ret, plen, t, e, o) => {        if (plen > 0) {            let ln = max(o.length - plen, 0);            o[ln] = o[o.length - 1];            o.length = ln + 1;        }        return ret;    },
shftf = (ret, fn, t, e, o, l, s) => (fn(o, e, l, s), ret),
R00_S=sym=>sym[0],
R30_undefined301_group_list=sym=>(((sym[1] !== null) ? sym[0].push(sym[1]) : null,sym[0])),
R31_undefined301_group_list=sym=>(sym[0] !== null) ? [sym[0]] : [],
R50_IMPORT_TAG=(sym,env,lex)=>fn.element_selector(sym[1],sym[2],null,env,lex),
R51_IMPORT_TAG=(sym,env,lex)=>fn.element_selector(sym[1],null,null,env,lex),
R60_wickup_WICKUP_PLUGIN=sym=>sym[1],
R130_wickup_HORIZONTAL_RULE=(sym,env,lex)=>fn.element_selector("hr",null,null,env,lex),
R190_wickup_HEADER=(sym,env,lex)=>fn.element_selector("h" + Math.min(sym[0].length,6),null,sym[1],env,lex),
R230_wickup_BLOCK_QUOTES=(sym,env,lex)=>fn.element_selector("blockquote",null,sym[1],env,lex,sym[0].length),
R270_wickup_UNORDERED_LIST_ITEM=(sym,env,lex)=>fn.element_selector("li",null,sym[1],env,lex,sym[0].length),
R290_wickup_undefined3111_group=(sym,env,lex)=>fn.element_selector("code",null,[(((sym[1].data = sym[0] + sym[1].data,sym[1])))],env,lex),
R291_wickup_undefined3111_group=(sym,env,lex)=>fn.element_selector("code",null,[(((sym[0].data = sym[0].data,sym[0])))],env,lex),
R310_wickup_CODE_BLOCK=(sym,env,lex)=>fn.element_selector("pre",null,sym[3],env,lex),
R311_wickup_CODE_BLOCK=(sym,env,lex)=>fn.element_selector("pre",null,sym[2],env,lex),
R320_wickup_LINK=(sym,env,lex)=>fn.element_selector("a",[new fn.attribute(["href","",sym[1]])],[sym[4]],env,lex),
R340_wickup_ITALIC_BOLD_EMPHASIS=(sym,env,lex)=>fn.element_selector("i",null,[fn.element_selector("b",null,sym[3],env,lex)],env,lex),
R360_wickup_BOLD_EMPHASIS=(sym,env,lex)=>fn.element_selector("b",null,sym[2],env,lex),
R380_wickup_EMPHASIS=(sym,env,lex)=>fn.element_selector("i",null,sym[1],env,lex),
R390_wickup_CODE_QUOTE=(sym,env,lex)=>fn.element_selector("code",null,[new fn.text([sym[1]],env)],env,lex),
R400_wickup_BODY_SYMBOLS2_list=sym=>sym[0] + sym[1],
R401_wickup_BODY_SYMBOLS2_list=sym=>sym[0] + "",
R500_css_STYLE_SHEET=sym=>new fn.ruleset(sym[0],sym[1]),
R501_css_STYLE_SHEET=sym=>new fn.ruleset(null,sym[0]),
R502_css_STYLE_SHEET=sym=>new fn.ruleset(sym[0],null),
R503_css_STYLE_SHEET=()=>new fn.ruleset(null,null),
R510_css_COMPLEX_SELECTOR_list=sym=>(((sym[1] !== null) ? sym[0].push(sym[2]) : null,sym[0])),
R520_css_STYLE_RULE=sym=>new fn.stylerule(sym[0],sym[2]),
R521_css_STYLE_RULE=sym=>new fn.stylerule(null,sym[1]),
C630_css_keyframes=function (sym){this.keyframes = sym[4];},
C660_css_keyframes_blocks=function (sym){this.selectors = sym[0];this.props = sym[2].props;},
R1240_css_TYPE_SELECTOR=sym=>new fn.type_selector([sym[0],sym[1]]),
R1241_css_TYPE_SELECTOR=sym=>new fn.type_selector([sym[0]]),
R1270_css_WQ_NAME=sym=>[sym[0],sym[1]],
R1271_css_WQ_NAME=sym=>[sym[0]],
R1410_css_declaration_list=sym=>((sym[0].push(sym[1]),sym[0])),
R1411_css_declaration_list=sym=>((sym[0].push(...sym[1]),sym[0])),
R1460_css_declaration_values=sym=>sym.join(""),
I1520_js_javascript=function (sym,env){env.IS_MODULE = false;},
R1530_js_start=(sym,env)=>(env.IS_MODULE) ? new fn.module(sym[0]) : new fn.script(sym[0]),
I1580_js_module_item=function (sym,env){env.IS_MODULE = true;},
R1590_js_import_declaration=sym=>new fn.import_declaration(sym[2],sym[1]),
R1591_js_import_declaration=sym=>new fn.import_declaration(sym[1]),
R1600_js_import_clause=sym=>[sym[0],sym[2]],
R1650_js_named_imports=sym=>new fn.named_imports(sym[1]),
R1651_js_named_imports=()=>new fn.named_imports(null),
R1670_js_import_specifier=sym=>new fn.import_specifier(sym[0]),
R1671_js_import_specifier=sym=>new fn.import_specifier(sym[0],sym[1]),
R1700_js_export_declaration=sym=>new fn.export_declaration(null,sym[2],false),
R1701_js_export_declaration=sym=>new fn.export_declaration(sym[1],sym[2],false),
R1702_js_export_declaration=sym=>new fn.export_declaration(sym[1],null,false),
R1703_js_export_declaration=sym=>new fn.export_declaration(sym[1],null,true),
R1730_js_export_clause=sym=>new fn.export_clause(sym[1]),
R1731_js_export_clause=()=>new fn.export_clause(null),
R1740_js_export_specifier=sym=>new fn.export_specifier(sym[0]),
R1741_js_export_specifier=sym=>new fn.export_specifier(sym[0],sym[1]),
R1920_js_iteration_statement=sym=>(new fn.for_statement(sym[2],sym[4],sym[6],sym[8])),
I1921_js_iteration_statement=function (sym,env){env.ASI = false;},
I1922_js_iteration_statement=function (sym,env){env.ASI = true;},
R1923_js_iteration_statement=sym=>(new fn.for_statement(sym[2],sym[3],sym[5],sym[7])),
R1924_js_iteration_statement=sym=>(new fn.for_in_statement(sym[2],sym[4],sym[6])),
R1925_js_iteration_statement=sym=>(new fn.for_of_statement(sym[1],sym[3],sym[5],sym[7])),
R1926_js_iteration_statement=sym=>(new fn.for_statement(null,sym[3],sym[5],sym[7])),
R1927_js_iteration_statement=sym=>(new fn.for_statement(sym[2],null,sym[5],sym[7])),
R1928_js_iteration_statement=sym=>(new fn.for_statement(sym[2],sym[4],null,sym[7])),
R1929_js_iteration_statement=sym=>(new fn.for_statement(sym[2],null,sym[4],sym[6])),
R19210_js_iteration_statement=sym=>(new fn.for_statement(sym[2],sym[3],null,sym[6])),
R19211_js_iteration_statement=sym=>(new fn.for_of_statement(null,sym[2],sym[4],sym[6])),
R19212_js_iteration_statement=sym=>(new fn.for_statement(null,null,sym[4],sym[6])),
R19213_js_iteration_statement=sym=>(new fn.for_statement(null,sym[3],null,sym[6])),
R19214_js_iteration_statement=sym=>(new fn.for_statement(sym[2],null,null,sym[6])),
R19215_js_iteration_statement=sym=>(new fn.for_statement(sym[2],null,null,sym[5])),
R19216_js_iteration_statement=sym=>(new fn.for_statement(null,null,null,sym[5])),
R1950_js_continue_statement=sym=>(new fn.continue_statement(sym[1])),
R1951_js_continue_statement=()=>(new fn.continue_statement(null)),
R1960_js_break_statement=sym=>(new fn.break_statement(sym[1])),
R1961_js_break_statement=()=>(new fn.break_statement(null)),
R1970_js_return_statement=sym=>new fn.return_statement(sym[1]),
R1971_js_return_statement=()=>new fn.return_statement(null),
R1980_js_throw_statement=sym=>new fn.throw_statement(sym[1]),
R1990_js_with_statement=sym=>new fn.with_statement(sym[2],sym[4]),
R2000_js_switch_statement=sym=>new fn.switch_statement(sym[2],sym[4]),
R2010_js_case_block=()=>[],
R2011_js_case_block=sym=>sym[1].concat(sym[2].concat(sym[3])),
R2012_js_case_block=sym=>sym[1].concat(sym[2]),
R2020_js_case_clauses=sym=>sym[0].concat(sym[1]),
R2030_js_case_clause=sym=>(new fn.case_statement(sym[1],sym[3])),
R2031_js_case_clause=sym=>(new fn.case_statement(sym[1],null)),
R2040_js_default_clause=sym=>(new fn.default_case_statement(sym[2])),
R2041_js_default_clause=()=>(new fn.default_case_statement(null)),
R2080_js_try_statement=sym=>(new fn.try_statement(sym[1],sym[2])),
R2081_js_try_statement=sym=>(new fn.try_statement(sym[1],null,sym[2])),
R2082_js_try_statement=sym=>(new fn.try_statement(sym[1],sym[2],sym[3])),
R2140_js_variable_declaration_list=sym=>((sym[0].push(sym[2]),sym[0])),
R2170_js_let_or_const=()=>"let",
R2171_js_let_or_const=()=>"const",
R2200_js_function_expression=sym=>new fn.function_declaration(sym[1],sym[3],sym[6]),
R2201_js_function_expression=sym=>new fn.function_declaration(null,sym[2],sym[5]),
R2202_js_function_expression=sym=>new fn.function_declaration(sym[1],null,sym[5]),
R2203_js_function_expression=sym=>new fn.function_declaration(sym[1],sym[3],null),
R2204_js_function_expression=sym=>new fn.function_declaration(null,null,sym[4]),
R2205_js_function_expression=sym=>new fn.function_declaration(null,sym[2],null),
R2206_js_function_expression=sym=>new fn.function_declaration(sym[1],null,null),
R2207_js_function_expression=()=>new fn.function_declaration(null,null,null),
R2230_js_formal_parameters=sym=>new fn.parenthasized(sym[0]),
R2231_js_formal_parameters=sym=>new fn.parenthasized(...sym[0]),
R2232_js_formal_parameters=sym=>new fn.parenthasized(...sym[0],sym[2]),
R2290_js_arrow_function=sym=>new fn.arrow_function_declaration(null,sym[0],sym[2]),
R2360_js_class_declaration=sym=>new fn.class_declaration([sym[1],sym[2]]),
R2361_js_class_declaration=()=>new fn.class_declaration([null,null]),
R2370_js_class_expression=sym=>new fn.class_expression([sym[1],sym[2]]),
R2371_js_class_expression=sym=>new fn.class_expression([null,sym[1]]),
R2380_js_class_tail=sym=>({h : sym[0],t : sym[2]}),
R2381_js_class_tail=sym=>({h : null,t : sym[1]}),
R2382_js_class_tail=sym=>({h : sym[0],t : null}),
R2383_js_class_tail=()=>({h : null,t : null}),
R2410_js_class_element_list=sym=>(sym[0].push(sym[1])),
R2420_js_class_element=sym=>(((sym[1].static = true,sym[1]))),
R2490_js_new_expression=sym=>new fn.new_expression(sym[1],null),
R2500_js_member_expression=sym=>new fn.member_expression(sym[0],sym[2],true),
R2501_js_member_expression=sym=>new fn.member_expression(sym[0],sym[2],false),
R2502_js_member_expression=sym=>new fn.new_expression(sym[1],sym[2]),
R2560_js_arguments=sym=>new fn.parenthasized(...sym[1]),
R2561_js_arguments=()=>new fn.parenthasized(),
R2620_js_object_literal=sym=>new fn.object_literal(sym[1]),
R2621_js_object_literal=()=>new fn.object_literal(null),
R2690_js_array_literal=sym=>new fn.array_literal(sym[1]),
R2691_js_array_literal=()=>new fn.array_literal(null),
R2700_js_element_list=sym=>[sym[1]],
R2701_js_element_list=sym=>(((sym[0].push(sym[2]),sym[0]))),
R2900_js_cover_parenthesized_expression_and_arrow_parameter_list=()=>null,
R2901_js_cover_parenthesized_expression_and_arrow_parameter_list=sym=>new fn.parenthasized(sym[1]),
R2902_js_cover_parenthesized_expression_and_arrow_parameter_list=sym=>new fn.parenthasized(new fn.spread_element(sym.slice(1,3))),
R2903_js_cover_parenthesized_expression_and_arrow_parameter_list=sym=>new fn.parenthasized(sym$2,new fn.spread_element(sym.slice(3,5))),
R3210_html_BODY=sym=>((sym[1].import_list = sym[0],sym[1])),
R3230_html_TAG=(sym,env,lex)=>fn.element_selector(sym[1],sym[2],sym[4],env,lex),
I3231_html_TAG=function (sym,env,lex){env.off = lex.off + lex.tl;},
R3232_html_TAG=(sym,env,lex)=>fn.element_selector(sym[1],sym[2],sym[3],env,lex),
R3233_html_TAG=(sym,env,lex)=>fn.element_selector(sym[1],null,sym[3],env,lex),
R3234_html_TAG=(sym,env,lex)=>fn.element_selector(sym[1],null,sym[2],env,lex),

    //Sparse Map Lookup
    lsm = (index, map) => {    if (map[0] == 0xFFFFFFFF) return map[index + 1];    for (let i = 1, ind = 0, l = map.length, n = 0; i < l && ind <= index; i++) {        if (ind !== index) {            if ((n = map[i]) > -1) ind++;            else ind += -n;        } else return map[i];    }    return -1;},

    //State Action Functions
    state_funct = [e=>34,
(...v)=>redv(5,R00_S,1,0,...v),
(...v)=>redn(1031,1,...v),
(...v)=>redn(327687,1,...v),
(...v)=>redn(328711,1,...v),
(...v)=>redv(3079,R31_undefined301_group_list,1,0,...v),
(...v)=>redn(2055,1,...v),
e=>70,
e=>50,
e=>74,
e=>78,
e=>82,
e=>86,
e=>90,
e=>94,
e=>98,
e=>102,
e=>106,
e=>110,
e=>114,
e=>118,
e=>122,
e=>126,
e=>130,
e=>134,
e=>138,
e=>142,
(...v)=>redn(329735,1,...v),
(...v)=>redv(328715,R3210_html_BODY,2,0,...v),
(...v)=>redv(3083,R30_undefined301_group_list,2,0,...v),
e=>150,
e=>154,
e=>170,
e=>166,
e=>186,
(...v)=>shftf(182,I3231_html_TAG,...v),
e=>198,
(...v)=>shftf(194,I3231_html_TAG,...v),
(...v)=>redn(339975,1,...v),
e=>210,
(...v)=>redv(344071,R00_S,1,0,...v),
e=>218,
e=>222,
e=>214,
(...v)=>redn(340999,1,...v),
(...v)=>redn(331783,1,...v),
e=>226,
e=>230,
e=>238,
e=>246,
(...v)=>redv(5135,R51_IMPORT_TAG,3,0,...v),
(...v)=>redv(335879,R1271_css_WQ_NAME,1,0,...v),
(...v)=>rednv(336903,fn.attribute,1,0,...v),
e=>250,
e=>258,
e=>266,
(...v)=>redn(337927,1,...v),
e=>274,
(...v)=>shftf(270,I3231_html_TAG,...v),
e=>378,
e=>358,
e=>370,
e=>374,
e=>366,
e=>362,
e=>310,
e=>282,
e=>382,
e=>334,
e=>350,
e=>338,
e=>386,
e=>394,
(...v)=>shftf(390,I3231_html_TAG,...v),
(...v)=>redv(330767,R51_IMPORT_TAG,3,0,...v),
e=>398,
e=>402,
(...v)=>redv(344075,R400_wickup_BODY_SYMBOLS2_list,2,0,...v),
(...v)=>redv(343047,R401_wickup_BODY_SYMBOLS2_list,1,0,...v),
(...v)=>redn(342023,1,...v),
e=>410,
(...v)=>redv(5139,R50_IMPORT_TAG,4,0,...v),
(...v)=>redv(335883,R1410_css_declaration_list,2,0,...v),
(...v)=>redv(5139,R51_IMPORT_TAG,4,0,...v),
e=>422,
e=>438,
e=>442,
e=>446,
(...v)=>redv(337931,R2900_js_cover_parenthesized_expression_and_arrow_parameter_list,2,0,...v),
e=>450,
e=>458,
e=>462,
e=>466,
(...v)=>redn(333831,1,...v),
(...v)=>redv(332807,R31_undefined301_group_list,1,0,...v),
(...v)=>redn(334855,1,...v),
(...v)=>rednv(6151,fn.text,1,0,...v),
e=>562,
e=>518,
e=>530,
e=>534,
e=>546,
e=>550,
(...v)=>redv(9223,R00_S,1,0,...v),
e=>574,
(...v)=>redn(346119,1,...v),
(...v)=>rednv(346119,fn.text,1,0,...v),
(...v)=>redn(28679,1,...v),
e=>586,
(...v)=>redn(34823,1,...v),
(...v)=>redn(36871,1,...v),
e=>630,
e=>610,
e=>634,
e=>618,
e=>622,
e=>626,
e=>614,
e=>638,
(...v)=>redv(345095,R401_wickup_BODY_SYMBOLS2_list,1,0,...v),
(...v)=>redn(347143,1,...v),
(...v)=>redv(330771,R51_IMPORT_TAG,4,0,...v),
(...v)=>redv(330771,R50_IMPORT_TAG,4,0,...v),
e=>642,
e=>646,
(...v)=>redv(343051,R400_wickup_BODY_SYMBOLS2_list,2,0,...v),
(...v)=>redv(5143,R50_IMPORT_TAG,5,0,...v),
(...v)=>redv(5143,R51_IMPORT_TAG,5,0,...v),
e=>658,
(...v)=>rednv(336911,fn.attribute,3,0,...v),
(...v)=>redn(338951,1,...v),
e=>678,
e=>682,
e=>702,
e=>698,
e=>694,
e=>690,
e=>686,
(...v)=>redv(337935,R60_wickup_WICKUP_PLUGIN,3,0,...v),
e=>710,
(...v)=>redv(330775,R50_IMPORT_TAG,5,0,...v),
e=>722,
(...v)=>redv(332811,R30_undefined301_group_list,2,0,...v),
(...v)=>redv(6155,R60_wickup_WICKUP_PLUGIN,2,0,...v),
(...v)=>redn(10247,1,...v),
(...v)=>redv(17415,R31_undefined301_group_list,1,0,...v),
(...v)=>redn(16391,1,...v),
(...v)=>redv(21511,R31_undefined301_group_list,1,0,...v),
(...v)=>redn(20487,1,...v),
e=>766,
e=>770,
(...v)=>redv(25607,R31_undefined301_group_list,1,0,...v),
(...v)=>redn(24583,1,...v),
(...v)=>redv(13319,R130_wickup_HORIZONTAL_RULE,1,0,...v),
(...v)=>redv(15367,R00_S,1,0,...v),
e=>786,
(...v)=>redv(14343,R31_undefined301_group_list,1,0,...v),
(...v)=>redv(9227,R00_S,2,0,...v),
(...v)=>redv(8199,R31_undefined301_group_list,1,0,...v),
(...v)=>redn(7175,1,...v),
(...v)=>redv(345099,R400_wickup_BODY_SYMBOLS2_list,2,0,...v),
e=>794,
e=>798,
e=>806,
(...v)=>redv(37895,R31_undefined301_group_list,1,0,...v),
e=>814,
(...v)=>redn(44039,1,...v),
(...v)=>redv(43015,R401_wickup_BODY_SYMBOLS2_list,1,0,...v),
(...v)=>redn(45063,1,...v),
e=>826,
(...v)=>redv(5147,R50_IMPORT_TAG,6,0,...v),
(...v)=>redn(4111,3,...v),
e=>830,
(...v)=>redn(351239,1,...v),
(...v)=>redv(350215,R401_wickup_BODY_SYMBOLS2_list,1,0,...v),
(...v)=>redn(349191,1,...v),
(...v)=>redn(352263,1,...v),
e=>838,
e=>846,
e=>850,
(...v)=>redv(330779,R51_IMPORT_TAG,6,0,...v),
(...v)=>redv(19467,R190_wickup_HEADER,2,0,...v),
(...v)=>redv(17419,R30_undefined301_group_list,2,0,...v),
(...v)=>redv(18439,R31_undefined301_group_list,1,0,...v),
(...v)=>redn(11271,1,...v),
(...v)=>redv(23563,R230_wickup_BLOCK_QUOTES,2,0,...v),
(...v)=>redv(21515,R30_undefined301_group_list,2,0,...v),
(...v)=>redv(26631,R31_undefined301_group_list,1,0,...v),
(...v)=>redn(12295,1,...v),
e=>862,
e=>874,
(...v)=>redv(27659,R270_wickup_UNORDERED_LIST_ITEM,2,0,...v),
(...v)=>redv(25611,R30_undefined301_group_list,2,0,...v),
(...v)=>redv(13323,R60_wickup_WICKUP_PLUGIN,2,0,...v),
(...v)=>redv(14347,R30_undefined301_group_list,2,0,...v),
(...v)=>redv(8203,R30_undefined301_group_list,2,0,...v),
e=>890,
(...v)=>redv(38927,R380_wickup_EMPHASIS,3,0,...v),
(...v)=>redv(37899,R30_undefined301_group_list,2,0,...v),
(...v)=>redv(39951,R390_wickup_CODE_QUOTE,3,0,...v),
(...v)=>redv(43019,R400_wickup_BODY_SYMBOLS2_list,2,0,...v),
e=>894,
(...v)=>redv(330779,R3234_html_TAG,6,0,...v),
(...v)=>redv(348175,R60_wickup_WICKUP_PLUGIN,3,0,...v),
(...v)=>redv(350219,R400_wickup_BODY_SYMBOLS2_list,2,0,...v),
e=>898,
(...v)=>redv(330783,R50_IMPORT_TAG,7,0,...v),
(...v)=>redv(330783,R3233_html_TAG,7,0,...v),
(...v)=>redv(18443,R30_undefined301_group_list,2,0,...v),
(...v)=>redv(26635,R30_undefined301_group_list,2,0,...v),
e=>906,
(...v)=>redv(30727,R31_undefined301_group_list,1,0,...v),
(...v)=>redv(29703,R291_wickup_undefined3111_group,1,0,...v),
e=>918,
e=>922,
e=>926,
(...v)=>redv(330783,R3232_html_TAG,7,0,...v),
(...v)=>redv(330787,R3230_html_TAG,8,0,...v),
e=>930,
(...v)=>redv(31763,R311_wickup_CODE_BLOCK,4,0,...v),
(...v)=>redv(30731,R30_undefined301_group_list,2,0,...v),
(...v)=>redv(29707,R290_wickup_undefined3111_group,2,0,...v),
(...v)=>redv(32791,R320_wickup_LINK,5,0,...v),
e=>934,
(...v)=>redv(36887,R360_wickup_BOLD_EMPHASIS,5,0,...v),
(...v)=>redv(31767,R310_wickup_CODE_BLOCK,5,0,...v),
e=>938,
(...v)=>redv(34847,R340_wickup_ITALIC_BOLD_EMPHASIS,7,0,...v)],

    //Goto Lookup Functions
    goto = [v=>lsm(v,gt0),
nf,
nf,
nf,
v=>lsm(v,gt1),
nf,
nf,
nf,
v=>lsm(v,gt2),
nf,
nf,
nf,
v=>lsm(v,gt3),
v=>lsm(v,gt4),
v=>lsm(v,gt5),
nf,
v=>lsm(v,gt6),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt7),
nf,
v=>lsm(v,gt8),
nf,
nf,
v=>lsm(v,gt9),
v=>lsm(v,gt10),
nf,
v=>lsm(v,gt7),
v=>lsm(v,gt11),
nf,
v=>lsm(v,gt7),
nf,
nf,
v=>lsm(v,gt12),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt13),
nf,
v=>lsm(v,gt14),
nf,
nf,
v=>lsm(v,gt15),
nf,
nf,
nf,
nf,
v=>lsm(v,gt16),
nf,
nf,
v=>lsm(v,gt17),
v=>lsm(v,gt18),
nf,
nf,
nf,
nf,
v=>lsm(v,gt19),
v=>lsm(v,gt20),
nf,
v=>lsm(v,gt21),
nf,
nf,
nf,
v=>lsm(v,gt22),
v=>lsm(v,gt23),
nf,
nf,
v=>lsm(v,gt24),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt2),
nf,
nf,
nf,
v=>lsm(v,gt25),
nf,
nf,
v=>lsm(v,gt26),
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt27),
v=>lsm(v,gt28),
nf,
nf,
nf,
v=>lsm(v,gt29),
nf,
v=>lsm(v,gt30),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt31),
nf,
nf,
v=>lsm(v,gt32),
nf,
nf,
nf,
v=>lsm(v,gt33),
nf,
nf,
nf,
v=>lsm(v,gt34),
nf,
nf,
v=>lsm(v,gt35),
nf,
nf,
nf,
nf,
v=>lsm(v,gt36),
v=>lsm(v,gt37),
nf,
nf,
v=>lsm(v,gt38),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt39),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt40),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt41),
nf,
nf,
nf,
v=>lsm(v,gt42),
nf,
nf,
nf,
nf,
v=>lsm(v,gt43),
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt44),
v=>lsm(v,gt43),
nf,
nf,
nf,
nf,
v=>lsm(v,gt45),
v=>lsm(v,gt46),
v=>lsm(v,gt37),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
v=>lsm(v,gt47),
v=>lsm(v,gt48),
nf,
v=>lsm(v,gt49),
nf,
nf,
v=>lsm(v,gt37),
nf,
nf,
nf,
v=>lsm(v,gt48),
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf,
nf];

function getToken(l, SYM_LU) {
    if (l.END) return 0; /*$eof*/

    switch (l.ty) {
        case 2:
            //*
            if (SYM_LU.has(l.tx)) return 14;
            /*/
                console.log(l.tx, SYM_LU.has(l.tx), SYM_LU.get(l.tx))
                if (SYM_LU.has(l.tx)) return SYM_LU.get(l.tx);
            //*/
            return 2;
        case 1:
            return 1;
        case 4:
            return 3;
        case 256:
            return 9;
        case 8:
            return 4;
        case 512:
            return 10;
        default:
            return SYM_LU.get(l.tx) || SYM_LU.get(l.ty);
    }
}

/************ Parser *************/

function parser(l, e = {}) {

    fn = e.functions;

    l.IWS = false;
    l.PARSE_STRING = true;

    if (symbols.length > 0) {
        symbols.forEach(s => { l.addSymbol(s) });
        l.tl = 0;
        l.next();
    }

    const recovery_chain = [];

    const o = [],
        ss = [0, 0];

    let time = 1000000,
        RECOVERING = 100,
        RESTARTED = true,
        tk = getToken(l, lu),
        p = l.copy(),
        sp = 1,
        len = 0,
        reduceStack = (e.reduceStack = []),
        ROOT = 10000,
        off = 0;

    outer:

        while (time-- > 0) {

            const fn = lsm(tk, state[ss[sp]]) || 0;

            let r,
                gt = -1;

            if (fn == 0) {
                /*Ignore the token*/
                tk = getToken(l.next(), lu);
                continue;
            }

            if (fn > 0) {
                r = state_funct[fn - 1](tk, e, o, l, ss[sp - 1]);
            } else {

                if (tk == 14) {
                    tk = lu.get(l.tx);
                    continue;
                }

                if (l.ty == 8 && l.tl > 1) {
                    // Make sure that special tokens are not getting in the way
                    l.tl = 0;
                    // This will skip the generation of a custom symbol
                    l.next(l, false);

                    if (l.tl == 1)
                        continue;
                }

                if (RECOVERING > 1 && !l.END) {

                    if (tk !== lu.get(l.ty)) {
                        tk = lu.get(l.ty);
                        continue;
                    }

                    if (tk !== 13) {
                        tk = 13;
                        RECOVERING = 1;
                        continue;
                    }
                }

                tk = getToken(l, lu);

                const recovery_token = eh[ss[sp]](tk, e, o, l, p, ss[sp], (lex) => getToken(lex, lu));

                if (RECOVERING > 0 && recovery_token >= 0) {
                    RECOVERING = -1; /* To prevent infinite recursion */
                    tk = recovery_token;
                    l.tl = 0; /*reset current token */
                    continue;
                }
            }

            switch (r & 3) {
                case 0:
                    /* ERROR */

                    if (tk == "$eof")
                        l.throw("Unexpected end of input");

                    l.throw(`Unexpected token [${RECOVERING ? l.next().tx : l.tx}]`);
                    return [null];

                case 1:
                    /* ACCEPT */
                    break outer;

                case 2:

                    /*SHIFT */
                    o.push(l.tx);
                    ss.push(off, r >> 2);
                    sp += 2;
                    l.next();
                    off = l.off;
                    tk = getToken(l, lu);
                    RECOVERING++;
                    break;

                case 3:
                    /* REDUCE */
                    RESTARTED = true;

                    len = (r & 0x3FC) >> 1;

                    ss.length -= len;
                    sp -= len;
                    gt = goto[ss[sp]](r >> 10);

                    if (gt < 0)
                        l.throw("Invalid state reached!");

                    if (reduceStack.length > 0) {
                        let i = reduceStack.length - 1;
                        while (i > -1) {
                            let item = reduceStack[i--];

                            if (item.index == sp) {
                                item.action(output)
                            } else if (item.index > sp) {
                                reduceStack.length--;
                            } else {
                                break;
                            }
                        }
                    }

                    ss.push(off, gt);
                    sp += 2;
                    break;
            }
        }
    return o[0];
}; export default parser;